import { createElement } from "@wordpress/element";

/**
 * External dependencies
 */
import classnames from 'classnames';
/**
 * WordPress dependencies
 */

import { __experimentalListView as ListView } from '@wordpress/block-editor';
import { Button } from '@wordpress/components';
import { useFocusOnMount, useFocusReturn, useMergeRefs } from '@wordpress/compose';
import { useDispatch } from '@wordpress/data';
import { __ } from '@wordpress/i18n';
import { closeSmall } from '@wordpress/icons';
import { ESCAPE } from '@wordpress/keycodes';
import { useState } from '@wordpress/element';
/**
 * Internal dependencies
 */

import { store as editPostStore } from '../../store';
import ListViewOutline from './list-view-outline';
export default function ListViewSidebar() {
  const {
    setIsListViewOpened
  } = useDispatch(editPostStore);
  const focusOnMountRef = useFocusOnMount('firstElement');
  const headerFocusReturnRef = useFocusReturn();
  const contentFocusReturnRef = useFocusReturn();

  function closeOnEscape(event) {
    if (event.keyCode === ESCAPE && !event.defaultPrevented) {
      event.preventDefault();
      setIsListViewOpened(false);
    }
  }

  const [tab, setTab] = useState('list-view');
  return (// eslint-disable-next-line jsx-a11y/no-static-element-interactions
    createElement("div", {
      "aria-label": __('Document Overview'),
      className: "edit-post-editor__document-overview-panel",
      onKeyDown: closeOnEscape
    }, createElement("div", {
      className: "edit-post-editor__document-overview-panel-header components-panel__header edit-post-sidebar__panel-tabs",
      ref: headerFocusReturnRef
    }, createElement(Button, {
      icon: closeSmall,
      label: __('Close Document Overview Sidebar'),
      onClick: () => setIsListViewOpened(false)
    }), createElement("ul", null, createElement("li", null, createElement(Button, {
      onClick: () => {
        setTab('list-view');
      },
      className: classnames('edit-post-sidebar__panel-tab', {
        'is-active': tab === 'list-view'
      }),
      "aria-current": tab === 'list-view'
    }, __('List View'))), createElement("li", null, createElement(Button, {
      onClick: () => {
        setTab('outline');
      },
      className: classnames('edit-post-sidebar__panel-tab', {
        'is-active': tab === 'outline'
      }),
      "aria-current": tab === 'outline'
    }, __('Outline'))))), createElement("div", {
      ref: useMergeRefs([contentFocusReturnRef, focusOnMountRef]),
      className: "edit-post-editor__list-view-container"
    }, tab === 'list-view' && createElement("div", {
      className: "edit-post-editor__list-view-panel-content"
    }, createElement(ListView, null)), tab === 'outline' && createElement(ListViewOutline, null)))
  );
}
//# sourceMappingURL=list-view-sidebar.js.map