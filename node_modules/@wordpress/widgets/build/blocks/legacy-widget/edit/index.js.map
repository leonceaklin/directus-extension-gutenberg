{"version":3,"sources":["@wordpress/widgets/src/blocks/legacy-widget/edit/index.js"],"names":["Edit","props","id","idBase","attributes","isWide","blockProps","className","Empty","setAttributes","brushIcon","selectedId","isMulti","instance","NotEmpty","clientId","isSelected","hasPreview","setHasPreview","widgetTypeId","record","widgetType","hasResolved","hasResolvedWidgetType","isNavigationMode","select","blockEditorStore","setInstance","nextInstance","mode","raw","name","description"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport {\n\tuseBlockProps,\n\tBlockControls,\n\tInspectorControls,\n\tBlockIcon,\n\tstore as blockEditorStore,\n} from '@wordpress/block-editor';\nimport { Flex, FlexBlock, Spinner, Placeholder } from '@wordpress/components';\nimport { brush as brushIcon } from '@wordpress/icons';\nimport { __ } from '@wordpress/i18n';\nimport { useState, useCallback } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\nimport { useEntityRecord } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport WidgetTypeSelector from './widget-type-selector';\nimport InspectorCard from './inspector-card';\nimport Form from './form';\nimport Preview from './preview';\nimport NoPreview from './no-preview';\nimport ConvertToBlocksButton from './convert-to-blocks-button';\n\nexport default function Edit( props ) {\n\tconst { id, idBase } = props.attributes;\n\tconst { isWide = false } = props;\n\n\tconst blockProps = useBlockProps( {\n\t\tclassName: classnames( {\n\t\t\t'is-wide-widget': isWide,\n\t\t} ),\n\t} );\n\n\treturn (\n\t\t<div { ...blockProps }>\n\t\t\t{ ! id && ! idBase ? (\n\t\t\t\t<Empty { ...props } />\n\t\t\t) : (\n\t\t\t\t<NotEmpty { ...props } />\n\t\t\t) }\n\t\t</div>\n\t);\n}\n\nfunction Empty( { attributes: { id, idBase }, setAttributes } ) {\n\treturn (\n\t\t<Placeholder\n\t\t\ticon={ <BlockIcon icon={ brushIcon } /> }\n\t\t\tlabel={ __( 'Legacy Widget' ) }\n\t\t>\n\t\t\t<Flex>\n\t\t\t\t<FlexBlock>\n\t\t\t\t\t<WidgetTypeSelector\n\t\t\t\t\t\tselectedId={ id ?? idBase }\n\t\t\t\t\t\tonSelect={ ( { selectedId, isMulti } ) => {\n\t\t\t\t\t\t\tif ( ! selectedId ) {\n\t\t\t\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t\t\t\tid: null,\n\t\t\t\t\t\t\t\t\tidBase: null,\n\t\t\t\t\t\t\t\t\tinstance: null,\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} else if ( isMulti ) {\n\t\t\t\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t\t\t\tid: null,\n\t\t\t\t\t\t\t\t\tidBase: selectedId,\n\t\t\t\t\t\t\t\t\tinstance: {},\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t\t\t\tid: selectedId,\n\t\t\t\t\t\t\t\t\tidBase: null,\n\t\t\t\t\t\t\t\t\tinstance: null,\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} }\n\t\t\t\t\t/>\n\t\t\t\t</FlexBlock>\n\t\t\t</Flex>\n\t\t</Placeholder>\n\t);\n}\n\nfunction NotEmpty( {\n\tattributes: { id, idBase, instance },\n\tsetAttributes,\n\tclientId,\n\tisSelected,\n\tisWide = false,\n} ) {\n\tconst [ hasPreview, setHasPreview ] = useState( null );\n\n\tconst widgetTypeId = id ?? idBase;\n\tconst { record: widgetType, hasResolved: hasResolvedWidgetType } =\n\t\tuseEntityRecord( 'root', 'widgetType', widgetTypeId );\n\n\tconst isNavigationMode = useSelect(\n\t\t( select ) => select( blockEditorStore ).isNavigationMode(),\n\t\t[]\n\t);\n\n\tconst setInstance = useCallback( ( nextInstance ) => {\n\t\tsetAttributes( { instance: nextInstance } );\n\t}, [] );\n\n\tif ( ! widgetType && hasResolvedWidgetType ) {\n\t\treturn (\n\t\t\t<Placeholder\n\t\t\t\ticon={ <BlockIcon icon={ brushIcon } /> }\n\t\t\t\tlabel={ __( 'Legacy Widget' ) }\n\t\t\t>\n\t\t\t\t{ __( 'Widget is missing.' ) }\n\t\t\t</Placeholder>\n\t\t);\n\t}\n\n\tif ( ! hasResolvedWidgetType ) {\n\t\treturn (\n\t\t\t<Placeholder>\n\t\t\t\t<Spinner />\n\t\t\t</Placeholder>\n\t\t);\n\t}\n\n\tconst mode =\n\t\tidBase && ( isNavigationMode || ! isSelected ) ? 'preview' : 'edit';\n\n\treturn (\n\t\t<>\n\t\t\t{ idBase === 'text' && (\n\t\t\t\t<BlockControls group=\"other\">\n\t\t\t\t\t<ConvertToBlocksButton\n\t\t\t\t\t\tclientId={ clientId }\n\t\t\t\t\t\trawInstance={ instance.raw }\n\t\t\t\t\t/>\n\t\t\t\t</BlockControls>\n\t\t\t) }\n\n\t\t\t<InspectorControls>\n\t\t\t\t<InspectorCard\n\t\t\t\t\tname={ widgetType.name }\n\t\t\t\t\tdescription={ widgetType.description }\n\t\t\t\t/>\n\t\t\t</InspectorControls>\n\n\t\t\t<Form\n\t\t\t\ttitle={ widgetType.name }\n\t\t\t\tisVisible={ mode === 'edit' }\n\t\t\t\tid={ id }\n\t\t\t\tidBase={ idBase }\n\t\t\t\tinstance={ instance }\n\t\t\t\tisWide={ isWide }\n\t\t\t\tonChangeInstance={ setInstance }\n\t\t\t\tonChangeHasPreview={ setHasPreview }\n\t\t\t/>\n\n\t\t\t{ idBase && (\n\t\t\t\t<>\n\t\t\t\t\t{ hasPreview === null && mode === 'preview' && (\n\t\t\t\t\t\t<Placeholder>\n\t\t\t\t\t\t\t<Spinner />\n\t\t\t\t\t\t</Placeholder>\n\t\t\t\t\t) }\n\t\t\t\t\t{ hasPreview === true && (\n\t\t\t\t\t\t<Preview\n\t\t\t\t\t\t\tidBase={ idBase }\n\t\t\t\t\t\t\tinstance={ instance }\n\t\t\t\t\t\t\tisVisible={ mode === 'preview' }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t\t{ hasPreview === false && mode === 'preview' && (\n\t\t\t\t\t\t<NoPreview name={ widgetType.name } />\n\t\t\t\t\t) }\n\t\t\t\t</>\n\t\t\t) }\n\t\t</>\n\t);\n}\n"]}