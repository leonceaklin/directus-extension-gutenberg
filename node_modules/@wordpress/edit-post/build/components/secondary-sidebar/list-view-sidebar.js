"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ListViewSidebar;

var _element = require("@wordpress/element");

var _classnames = _interopRequireDefault(require("classnames"));

var _blockEditor = require("@wordpress/block-editor");

var _components = require("@wordpress/components");

var _compose = require("@wordpress/compose");

var _data = require("@wordpress/data");

var _i18n = require("@wordpress/i18n");

var _icons = require("@wordpress/icons");

var _keycodes = require("@wordpress/keycodes");

var _store = require("../../store");

var _listViewOutline = _interopRequireDefault(require("./list-view-outline"));

/**
 * External dependencies
 */

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */
function ListViewSidebar() {
  const {
    setIsListViewOpened
  } = (0, _data.useDispatch)(_store.store);
  const focusOnMountRef = (0, _compose.useFocusOnMount)('firstElement');
  const headerFocusReturnRef = (0, _compose.useFocusReturn)();
  const contentFocusReturnRef = (0, _compose.useFocusReturn)();

  function closeOnEscape(event) {
    if (event.keyCode === _keycodes.ESCAPE && !event.defaultPrevented) {
      event.preventDefault();
      setIsListViewOpened(false);
    }
  }

  const [tab, setTab] = (0, _element.useState)('list-view');
  return (// eslint-disable-next-line jsx-a11y/no-static-element-interactions
    (0, _element.createElement)("div", {
      "aria-label": (0, _i18n.__)('Document Overview'),
      className: "edit-post-editor__document-overview-panel",
      onKeyDown: closeOnEscape
    }, (0, _element.createElement)("div", {
      className: "edit-post-editor__document-overview-panel-header components-panel__header edit-post-sidebar__panel-tabs",
      ref: headerFocusReturnRef
    }, (0, _element.createElement)(_components.Button, {
      icon: _icons.closeSmall,
      label: (0, _i18n.__)('Close Document Overview Sidebar'),
      onClick: () => setIsListViewOpened(false)
    }), (0, _element.createElement)("ul", null, (0, _element.createElement)("li", null, (0, _element.createElement)(_components.Button, {
      onClick: () => {
        setTab('list-view');
      },
      className: (0, _classnames.default)('edit-post-sidebar__panel-tab', {
        'is-active': tab === 'list-view'
      }),
      "aria-current": tab === 'list-view'
    }, (0, _i18n.__)('List View'))), (0, _element.createElement)("li", null, (0, _element.createElement)(_components.Button, {
      onClick: () => {
        setTab('outline');
      },
      className: (0, _classnames.default)('edit-post-sidebar__panel-tab', {
        'is-active': tab === 'outline'
      }),
      "aria-current": tab === 'outline'
    }, (0, _i18n.__)('Outline'))))), (0, _element.createElement)("div", {
      ref: (0, _compose.useMergeRefs)([contentFocusReturnRef, focusOnMountRef]),
      className: "edit-post-editor__list-view-container"
    }, tab === 'list-view' && (0, _element.createElement)("div", {
      className: "edit-post-editor__list-view-panel-content"
    }, (0, _element.createElement)(_blockEditor.__experimentalListView, null)), tab === 'outline' && (0, _element.createElement)(_listViewOutline.default, null)))
  );
}
//# sourceMappingURL=list-view-sidebar.js.map