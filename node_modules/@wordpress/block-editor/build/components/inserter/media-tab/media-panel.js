"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MediaCategoryDialog = MediaCategoryDialog;
exports.MediaCategoryPanel = MediaCategoryPanel;

var _element = require("@wordpress/element");

var _components = require("@wordpress/components");

var _dom = require("@wordpress/dom");

var _i18n = require("@wordpress/i18n");

var _mediaList = _interopRequireDefault(require("./media-list"));

var _useDebouncedInput = _interopRequireDefault(require("../hooks/use-debounced-input"));

var _hooks = require("./hooks");

var _noResults = _interopRequireDefault(require("../no-results"));

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */
const INITIAL_MEDIA_ITEMS_PER_PAGE = 10;

function MediaCategoryDialog(_ref) {
  let {
    rootClientId,
    onInsert,
    category
  } = _ref;
  const container = (0, _element.useRef)();
  (0, _element.useEffect)(() => {
    const timeout = setTimeout(() => {
      const [firstTabbable] = _dom.focus.tabbable.find(container.current);

      firstTabbable === null || firstTabbable === void 0 ? void 0 : firstTabbable.focus();
    });
    return () => clearTimeout(timeout);
  }, [category]);
  return (0, _element.createElement)("div", {
    ref: container,
    className: "block-editor-inserter__media-dialog"
  }, (0, _element.createElement)(MediaCategoryPanel, {
    rootClientId: rootClientId,
    onInsert: onInsert,
    category: category
  }));
}

function MediaCategoryPanel(_ref2) {
  let {
    rootClientId,
    onInsert,
    category
  } = _ref2;
  const [search, setSearch, debouncedSearch] = (0, _useDebouncedInput.default)();
  const mediaList = (0, _hooks.useMediaResults)({
    per_page: !!debouncedSearch ? 20 : INITIAL_MEDIA_ITEMS_PER_PAGE,
    media_type: category.mediaType,
    search: debouncedSearch,
    orderBy: !!debouncedSearch ? 'relevance' : 'date'
  });
  const baseCssClass = 'block-editor-inserter__media-panel';
  return (0, _element.createElement)("div", {
    className: baseCssClass
  }, (0, _element.createElement)(_components.SearchControl, {
    className: `${baseCssClass}-search`,
    onChange: setSearch,
    value: search,
    label: (0, _i18n.sprintf)(
    /* translators: %s: Name of the media category(ex. 'images, videos'). */
    (0, _i18n.__)('Search %s'), category.label.toLocaleLowerCase()),
    placeholder: (0, _i18n.sprintf)(
    /* translators: %s: Name of the media category(ex. 'images, videos'). */
    (0, _i18n.__)('Search %s'), category.label.toLocaleLowerCase())
  }), !mediaList && (0, _element.createElement)("div", {
    className: `${baseCssClass}-spinner`
  }, (0, _element.createElement)(_components.Spinner, null)), Array.isArray(mediaList) && !mediaList.length && (0, _element.createElement)(_noResults.default, null), !!(mediaList !== null && mediaList !== void 0 && mediaList.length) && (0, _element.createElement)(_mediaList.default, {
    rootClientId: rootClientId,
    onClick: onInsert,
    mediaList: mediaList,
    mediaType: category.mediaType
  }));
}
//# sourceMappingURL=media-panel.js.map