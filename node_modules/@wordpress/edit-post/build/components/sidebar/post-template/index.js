"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = PostTemplate;

var _element = require("@wordpress/element");

var _components = require("@wordpress/components");

var _i18n = require("@wordpress/i18n");

var _data = require("@wordpress/data");

var _editor = require("@wordpress/editor");

var _coreData = require("@wordpress/core-data");

var _form = _interopRequireDefault(require("./form"));

var _store = require("../../../store");

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */
function PostTemplate() {
  // Use internal state instead of a ref to make sure that the component
  // re-renders when the popover's anchor updates.
  const [popoverAnchor, setPopoverAnchor] = (0, _element.useState)(null); // Memoize popoverProps to avoid returning a new object every time.

  const popoverProps = (0, _element.useMemo)(() => ({
    anchor: popoverAnchor
  }), [popoverAnchor]);
  const isVisible = (0, _data.useSelect)(select => {
    var _select$canUser;

    const postTypeSlug = select(_editor.store).getCurrentPostType();
    const postType = select(_coreData.store).getPostType(postTypeSlug);

    if (!(postType !== null && postType !== void 0 && postType.viewable)) {
      return false;
    }

    const settings = select(_editor.store).getEditorSettings();
    const hasTemplates = !!settings.availableTemplates && Object.keys(settings.availableTemplates).length > 0;

    if (hasTemplates) {
      return true;
    }

    if (!settings.supportsTemplateMode) {
      return false;
    }

    const canCreateTemplates = (_select$canUser = select(_coreData.store).canUser('create', 'templates')) !== null && _select$canUser !== void 0 ? _select$canUser : false;
    return canCreateTemplates;
  }, []);

  if (!isVisible) {
    return null;
  }

  return (0, _element.createElement)(_components.PanelRow, {
    className: "edit-post-post-template",
    ref: setPopoverAnchor
  }, (0, _element.createElement)("span", null, (0, _i18n.__)('Template')), (0, _element.createElement)(_components.Dropdown, {
    popoverProps: popoverProps,
    position: "bottom left",
    className: "edit-post-post-template__dropdown",
    contentClassName: "edit-post-post-template__dialog",
    focusOnMount: true,
    renderToggle: _ref => {
      let {
        isOpen,
        onToggle
      } = _ref;
      return (0, _element.createElement)(PostTemplateToggle, {
        isOpen: isOpen,
        onClick: onToggle
      });
    },
    renderContent: _ref2 => {
      let {
        onClose
      } = _ref2;
      return (0, _element.createElement)(_form.default, {
        onClose: onClose
      });
    }
  }));
}

function PostTemplateToggle(_ref3) {
  let {
    isOpen,
    onClick
  } = _ref3;
  const templateTitle = (0, _data.useSelect)(select => {
    const templateSlug = select(_editor.store).getEditedPostAttribute('template');
    const {
      supportsTemplateMode,
      availableTemplates
    } = select(_editor.store).getEditorSettings();

    if (!supportsTemplateMode && availableTemplates[templateSlug]) {
      return availableTemplates[templateSlug];
    }

    const template = select(_coreData.store).canUser('create', 'templates') && select(_store.store).getEditedPostTemplate();
    return (template === null || template === void 0 ? void 0 : template.title) || (template === null || template === void 0 ? void 0 : template.slug) || (availableTemplates === null || availableTemplates === void 0 ? void 0 : availableTemplates[templateSlug]);
  }, []);
  return (0, _element.createElement)(_components.Button, {
    className: "edit-post-post-template__toggle",
    variant: "tertiary",
    "aria-expanded": isOpen,
    "aria-label": templateTitle ? (0, _i18n.sprintf)( // translators: %s: Name of the currently selected template.
    (0, _i18n.__)('Select template: %s'), templateTitle) : (0, _i18n.__)('Select template'),
    onClick: onClick
  }, templateTitle !== null && templateTitle !== void 0 ? templateTitle : (0, _i18n.__)('Default template'));
}
//# sourceMappingURL=index.js.map