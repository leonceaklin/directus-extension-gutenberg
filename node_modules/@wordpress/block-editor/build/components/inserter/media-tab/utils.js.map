{"version":3,"sources":["@wordpress/block-editor/src/components/inserter/media-tab/utils.js"],"names":["mediaTypeTag","image","video","audio","getBlockAndPreviewFromMedia","media","mediaType","attributes","id","mediaSrc","source_url","url","alt","alt_text","undefined","caption","raw","includes","src","PreviewTag","preview"],"mappings":";;;;;;;;;AAGA;;AAHA;AACA;AACA;AAGA,MAAMA,YAAY,GAAG;AAAEC,EAAAA,KAAK,EAAE,KAAT;AAAgBC,EAAAA,KAAK,EAAE,OAAvB;AAAgCC,EAAAA,KAAK,EAAE;AAAvC,CAArB;;AAEO,SAASC,2BAAT,CAAsCC,KAAtC,EAA6CC,SAA7C,EAAyD;AAAA;;AAC/D;AACA,QAAMC,UAAU,GAAG;AAClBC,IAAAA,EAAE,EAAEH,KAAK,CAACG;AADQ,GAAnB,CAF+D,CAK/D;AACA;;AACA,QAAMC,QAAQ,GAAGJ,KAAK,CAACK,UAAN,IAAoBL,KAAK,CAACM,GAA3C;AACA,QAAMC,GAAG,GAAGP,KAAK,CAACQ,QAAN,IAAkBR,KAAK,CAACO,GAAxB,IAA+BE,SAA3C;AACA,QAAMC,OAAO,GAAG,mBAAAV,KAAK,CAACU,OAAN,kEAAeC,GAAf,KAAsBX,KAAK,CAACU,OAA5C;;AACA,MAAKA,OAAO,IAAI,OAAOA,OAAP,KAAmB,QAAnC,EAA8C;AAC7CR,IAAAA,UAAU,CAACQ,OAAX,GAAqBA,OAArB;AACA;;AACD,MAAKT,SAAS,KAAK,OAAnB,EAA6B;AAC5BC,IAAAA,UAAU,CAACI,GAAX,GAAiBF,QAAjB;AACAF,IAAAA,UAAU,CAACK,GAAX,GAAiBA,GAAjB;AACA,GAHD,MAGO,IAAK,CAAE,OAAF,EAAW,OAAX,EAAqBK,QAArB,CAA+BX,SAA/B,CAAL,EAAkD;AACxDC,IAAAA,UAAU,CAACW,GAAX,GAAiBT,QAAjB;AACA;;AACD,QAAMU,UAAU,GAAGnB,YAAY,CAAEM,SAAF,CAA/B;AACA,QAAMc,OAAO,GACZ,4BAAC,UAAD;AACC,IAAA,GAAG,EAAGX,QADP;AAEC,IAAA,GAAG,EAAGG,GAFP;AAGC,IAAA,QAAQ,EAAGN,SAAS,KAAK,OAAd,GAAwB,IAAxB,GAA+BQ,SAH3C;AAIC,IAAA,KAAK,EAAC;AAJP,IADD;AAQA,SAAO,CAAE,yBAAc,QAAQR,SAAW,EAAjC,EAAoCC,UAApC,CAAF,EAAoDa,OAApD,CAAP;AACA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { createBlock } from '@wordpress/blocks';\n\nconst mediaTypeTag = { image: 'img', video: 'video', audio: 'audio' };\n\nexport function getBlockAndPreviewFromMedia( media, mediaType ) {\n\t// Add the common attributes between the different media types.\n\tconst attributes = {\n\t\tid: media.id,\n\t};\n\t// Some props are named differently between the Media REST API and Media Library API.\n\t// For example `source_url` is used in the former and `url` is used in the latter.\n\tconst mediaSrc = media.source_url || media.url;\n\tconst alt = media.alt_text || media.alt || undefined;\n\tconst caption = media.caption?.raw || media.caption;\n\tif ( caption && typeof caption === 'string' ) {\n\t\tattributes.caption = caption;\n\t}\n\tif ( mediaType === 'image' ) {\n\t\tattributes.url = mediaSrc;\n\t\tattributes.alt = alt;\n\t} else if ( [ 'video', 'audio' ].includes( mediaType ) ) {\n\t\tattributes.src = mediaSrc;\n\t}\n\tconst PreviewTag = mediaTypeTag[ mediaType ];\n\tconst preview = (\n\t\t<PreviewTag\n\t\t\tsrc={ mediaSrc }\n\t\t\talt={ alt }\n\t\t\tcontrols={ mediaType === 'audio' ? true : undefined }\n\t\t\tinert=\"true\"\n\t\t/>\n\t);\n\treturn [ createBlock( `core/${ mediaType }`, attributes ), preview ];\n}\n"]}