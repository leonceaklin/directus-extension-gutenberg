{"version":3,"sources":["@wordpress/block-editor/src/components/inspector-controls-tabs/use-inspector-controls-tabs.js"],"names":["__experimentalUseSlotFills","useSlotFills","useSelect","InspectorControlsGroups","useIsListViewTabDisabled","InspectorAdvancedControls","TAB_LIST_VIEW","TAB_SETTINGS","TAB_STYLES","store","blockEditorStore","EMPTY_ARRAY","getShowTabs","blockName","tabSettings","window","__experimentalEnableBlockInspectorTabs","undefined","default","useInspectorControlsTabs","tabs","border","borderGroup","color","colorGroup","defaultGroup","dimensions","dimensionsGroup","list","listGroup","typography","typographyGroup","listViewDisabled","listFills","Slot","__unstableName","length","push","styleFills","settingsFills","slotName","select","getSettings","__experimentalBlockInspectorTabs","showTabs"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __experimentalUseSlotFills as useSlotFills } from '@wordpress/components';\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport InspectorControlsGroups from '../inspector-controls/groups';\nimport useIsListViewTabDisabled from './use-is-list-view-tab-disabled';\nimport { InspectorAdvancedControls } from '../inspector-controls';\nimport { TAB_LIST_VIEW, TAB_SETTINGS, TAB_STYLES } from './utils';\nimport { store as blockEditorStore } from '../../store';\n\nconst EMPTY_ARRAY = [];\n\nfunction getShowTabs( blockName, tabSettings = {} ) {\n\t// Don't allow settings to force the display of tabs if the block inspector\n\t// tabs experiment hasn't been opted into.\n\tif ( ! window?.__experimentalEnableBlockInspectorTabs ) {\n\t\treturn false;\n\t}\n\n\t// Block specific setting takes precedence over generic default.\n\tif ( tabSettings[ blockName ] !== undefined ) {\n\t\treturn tabSettings[ blockName ];\n\t}\n\n\t// Use generic default if set over the Gutenberg experiment option.\n\tif ( tabSettings.default !== undefined ) {\n\t\treturn tabSettings.default;\n\t}\n\n\treturn true;\n}\n\nexport default function useInspectorControlsTabs( blockName ) {\n\tconst tabs = [];\n\tconst {\n\t\tborder: borderGroup,\n\t\tcolor: colorGroup,\n\t\tdefault: defaultGroup,\n\t\tdimensions: dimensionsGroup,\n\t\tlist: listGroup,\n\t\ttypography: typographyGroup,\n\t} = InspectorControlsGroups;\n\n\t// List View Tab: If there are any fills for the list group add that tab.\n\tconst listViewDisabled = useIsListViewTabDisabled( blockName );\n\tconst listFills = useSlotFills( listGroup.Slot.__unstableName );\n\n\tif ( ! listViewDisabled && !! listFills && listFills.length ) {\n\t\ttabs.push( TAB_LIST_VIEW );\n\t}\n\n\t// Styles Tab: Add this tab if there are any fills for block supports\n\t// e.g. border, color, spacing, typography, etc.\n\tconst styleFills = [\n\t\t...( useSlotFills( borderGroup.Slot.__unstableName ) || [] ),\n\t\t...( useSlotFills( colorGroup.Slot.__unstableName ) || [] ),\n\t\t...( useSlotFills( dimensionsGroup.Slot.__unstableName ) || [] ),\n\t\t...( useSlotFills( typographyGroup.Slot.__unstableName ) || [] ),\n\t];\n\n\tif ( styleFills.length ) {\n\t\ttabs.push( TAB_STYLES );\n\t}\n\n\t// Settings Tab: If there are any fills for the general InspectorControls\n\t// or Advanced Controls slot, then add this tab.\n\tconst settingsFills = [\n\t\t...( useSlotFills( defaultGroup.Slot.__unstableName ) || [] ),\n\t\t...( useSlotFills( InspectorAdvancedControls.slotName ) || [] ),\n\t];\n\n\tif ( settingsFills.length ) {\n\t\ttabs.push( TAB_SETTINGS );\n\t}\n\n\tconst tabSettings = useSelect( ( select ) => {\n\t\treturn select( blockEditorStore ).getSettings()\n\t\t\t.__experimentalBlockInspectorTabs;\n\t}, [] );\n\n\tconst showTabs = getShowTabs( blockName, tabSettings );\n\n\treturn showTabs ? tabs : EMPTY_ARRAY;\n}\n"]}