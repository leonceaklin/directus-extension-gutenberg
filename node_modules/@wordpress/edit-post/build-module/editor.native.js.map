{"version":3,"sources":["@wordpress/edit-post/src/editor.native.js"],"names":["memize","map","I18nManager","GestureHandlerRootView","Component","EditorProvider","parse","serialize","store","blocksStore","withDispatch","withSelect","compose","subscribeSetFocusOnTitle","subscribeFeaturedImageIdNativeUpdated","SlotFillProvider","coreStore","Layout","editPostStore","Editor","constructor","props","arguments","galleryWithImageBlocks","window","wp","galleryBlockV2Enabled","initialHtmlModeEnabled","mode","switchEditorMode","getEditorSettings","maxSize","setTitleRef","bind","settings","hasFixedToolbar","focusMode","hiddenBlockTypes","blockTypes","isRTL","length","allowedBlockTypes","undefined","defaultAllowedBlockTypes","filter","type","includes","componentDidMount","editEntityRecord","postType","postId","subscriptionParentSetFocusOnTitle","postTitleRef","focus","focusTitleWhenAvailable","subscriptionParentFeaturedImageIdNativeUpdated","payload","featured_media","featuredImageId","undoIgnore","componentWillUnmount","remove","titleRef","render","initialEdits","post","initialHtml","editorSettings","normalizedPost","id","title","raw","initialTitle","content","status","meta","flex","select","isFeatureActive","getEditorMode","__experimentalGetPreviewDeviceType","getHiddenBlockTypes","getBlockTypes","dispatch"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport memize from 'memize';\nimport { map } from 'lodash';\nimport { I18nManager } from 'react-native';\nimport { GestureHandlerRootView } from 'react-native-gesture-handler';\n\n/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\nimport { EditorProvider } from '@wordpress/editor';\nimport { parse, serialize, store as blocksStore } from '@wordpress/blocks';\nimport { withDispatch, withSelect } from '@wordpress/data';\nimport { compose } from '@wordpress/compose';\nimport {\n\tsubscribeSetFocusOnTitle,\n\tsubscribeFeaturedImageIdNativeUpdated,\n} from '@wordpress/react-native-bridge';\nimport { SlotFillProvider } from '@wordpress/components';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport Layout from './components/layout';\nimport { store as editPostStore } from './store';\n\nclass Editor extends Component {\n\tconstructor( props ) {\n\t\tsuper( ...arguments );\n\n\t\t// need to set this globally to avoid race with deprecations\n\t\t// defaulting to true to avoid issues with a not-yet-cached value\n\t\tconst { galleryWithImageBlocks = true } = props;\n\t\twindow.wp.galleryBlockV2Enabled = galleryWithImageBlocks;\n\n\t\tif ( props.initialHtmlModeEnabled && props.mode === 'visual' ) {\n\t\t\t// Enable html mode if the initial mode the parent wants it but we're not already in it.\n\t\t\tthis.props.switchEditorMode( 'text' );\n\t\t}\n\n\t\tthis.getEditorSettings = memize( this.getEditorSettings, {\n\t\t\tmaxSize: 1,\n\t\t} );\n\n\t\tthis.setTitleRef = this.setTitleRef.bind( this );\n\t}\n\n\tgetEditorSettings(\n\t\tsettings,\n\t\thasFixedToolbar,\n\t\tfocusMode,\n\t\thiddenBlockTypes,\n\t\tblockTypes\n\t) {\n\t\tsettings = {\n\t\t\t...settings,\n\t\t\tisRTL: I18nManager.isRTL,\n\t\t\thasFixedToolbar,\n\t\t\tfocusMode,\n\t\t};\n\n\t\t// Omit hidden block types if exists and non-empty.\n\t\tif ( hiddenBlockTypes.length > 0 ) {\n\t\t\tif ( settings.allowedBlockTypes === undefined ) {\n\t\t\t\t// If no specific flags for allowedBlockTypes are set, assume `true`\n\t\t\t\t// meaning allow all block types.\n\t\t\t\tsettings.allowedBlockTypes = true;\n\t\t\t}\n\t\t\t// Defer to passed setting for `allowedBlockTypes` if provided as\n\t\t\t// anything other than `true` (where `true` is equivalent to allow\n\t\t\t// all block types).\n\t\t\tconst defaultAllowedBlockTypes =\n\t\t\t\ttrue === settings.allowedBlockTypes\n\t\t\t\t\t? map( blockTypes, 'name' )\n\t\t\t\t\t: settings.allowedBlockTypes || [];\n\n\t\t\tsettings.allowedBlockTypes = defaultAllowedBlockTypes.filter(\n\t\t\t\t( type ) => ! hiddenBlockTypes.includes( type )\n\t\t\t);\n\t\t}\n\n\t\treturn settings;\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { editEntityRecord, postType, postId } = this.props;\n\n\t\tthis.subscriptionParentSetFocusOnTitle = subscribeSetFocusOnTitle(\n\t\t\t() => {\n\t\t\t\tif ( this.postTitleRef ) {\n\t\t\t\t\tthis.postTitleRef.focus();\n\t\t\t\t} else {\n\t\t\t\t\t// If the post title ref is not available, we postpone setting focus to when it's available.\n\t\t\t\t\tthis.focusTitleWhenAvailable = true;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\tthis.subscriptionParentFeaturedImageIdNativeUpdated =\n\t\t\tsubscribeFeaturedImageIdNativeUpdated( ( payload ) => {\n\t\t\t\teditEntityRecord(\n\t\t\t\t\t'postType',\n\t\t\t\t\tpostType,\n\t\t\t\t\tpostId,\n\t\t\t\t\t{ featured_media: payload.featuredImageId },\n\t\t\t\t\t{\n\t\t\t\t\t\tundoIgnore: true,\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t} );\n\t}\n\n\tcomponentWillUnmount() {\n\t\tif ( this.subscriptionParentSetFocusOnTitle ) {\n\t\t\tthis.subscriptionParentSetFocusOnTitle.remove();\n\t\t}\n\n\t\tif ( this.subscribeFeaturedImageIdNativeUpdated ) {\n\t\t\tthis.subscribeFeaturedImageIdNativeUpdated.remove();\n\t\t}\n\t}\n\n\tsetTitleRef( titleRef ) {\n\t\tif ( this.focusTitleWhenAvailable && ! this.postTitleRef ) {\n\t\t\tthis.focusTitleWhenAvailable = false;\n\t\t\ttitleRef.focus();\n\t\t}\n\n\t\tthis.postTitleRef = titleRef;\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tsettings,\n\t\t\thasFixedToolbar,\n\t\t\tfocusMode,\n\t\t\tinitialEdits,\n\t\t\thiddenBlockTypes,\n\t\t\tblockTypes,\n\t\t\tpost,\n\t\t\tpostId,\n\t\t\tpostType,\n\t\t\tfeaturedImageId,\n\t\t\tinitialHtml,\n\t\t\t...props\n\t\t} = this.props;\n\n\t\tconst editorSettings = this.getEditorSettings(\n\t\t\tsettings,\n\t\t\thasFixedToolbar,\n\t\t\tfocusMode,\n\t\t\thiddenBlockTypes,\n\t\t\tblockTypes\n\t\t);\n\n\t\tconst normalizedPost = post || {\n\t\t\tid: postId,\n\t\t\ttitle: {\n\t\t\t\traw: props.initialTitle || '',\n\t\t\t},\n\t\t\tfeatured_media: featuredImageId,\n\t\t\tcontent: {\n\t\t\t\t// Make sure the post content is in sync with gutenberg store\n\t\t\t\t// to avoid marking the post as modified when simply loaded\n\t\t\t\t// For now, let's assume: serialize( parse( html ) ) !== html.\n\t\t\t\traw: serialize( parse( initialHtml || '' ) ),\n\t\t\t},\n\t\t\ttype: postType,\n\t\t\tstatus: 'draft',\n\t\t\tmeta: [],\n\t\t};\n\n\t\treturn (\n\t\t\t<GestureHandlerRootView style={ { flex: 1 } }>\n\t\t\t\t<SlotFillProvider>\n\t\t\t\t\t<EditorProvider\n\t\t\t\t\t\tsettings={ editorSettings }\n\t\t\t\t\t\tpost={ normalizedPost }\n\t\t\t\t\t\tinitialEdits={ initialEdits }\n\t\t\t\t\t\tuseSubRegistry={ false }\n\t\t\t\t\t\t{ ...props }\n\t\t\t\t\t>\n\t\t\t\t\t\t<Layout setTitleRef={ this.setTitleRef } />\n\t\t\t\t\t</EditorProvider>\n\t\t\t\t</SlotFillProvider>\n\t\t\t</GestureHandlerRootView>\n\t\t);\n\t}\n}\n\nexport default compose( [\n\twithSelect( ( select ) => {\n\t\tconst {\n\t\t\tisFeatureActive,\n\t\t\tgetEditorMode,\n\t\t\t__experimentalGetPreviewDeviceType,\n\t\t\tgetHiddenBlockTypes,\n\t\t} = select( editPostStore );\n\t\tconst { getBlockTypes } = select( blocksStore );\n\n\t\treturn {\n\t\t\thasFixedToolbar:\n\t\t\t\tisFeatureActive( 'fixedToolbar' ) ||\n\t\t\t\t__experimentalGetPreviewDeviceType() !== 'Desktop',\n\t\t\tfocusMode: isFeatureActive( 'focusMode' ),\n\t\t\tmode: getEditorMode(),\n\t\t\thiddenBlockTypes: getHiddenBlockTypes(),\n\t\t\tblockTypes: getBlockTypes(),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => {\n\t\tconst { switchEditorMode } = dispatch( editPostStore );\n\t\tconst { editEntityRecord } = dispatch( coreStore );\n\t\treturn {\n\t\t\tswitchEditorMode,\n\t\t\teditEntityRecord,\n\t\t};\n\t} ),\n] )( Editor );\n"]}