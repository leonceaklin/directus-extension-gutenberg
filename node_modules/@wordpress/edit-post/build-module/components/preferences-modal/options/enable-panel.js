/**
 * WordPress dependencies
 */
import { compose, ifCondition } from '@wordpress/compose';
import { withSelect, withDispatch } from '@wordpress/data';
import { ___unstablePreferencesModalBaseOption as BaseOption } from '@wordpress/interface';
/**
 * Internal dependencies
 */

import { store as editPostStore } from '../../../store';
export default compose(withSelect((select, _ref) => {
  let {
    panelName
  } = _ref;
  const {
    isEditorPanelEnabled,
    isEditorPanelRemoved
  } = select(editPostStore);
  return {
    isRemoved: isEditorPanelRemoved(panelName),
    isChecked: isEditorPanelEnabled(panelName)
  };
}), ifCondition(_ref2 => {
  let {
    isRemoved
  } = _ref2;
  return !isRemoved;
}), withDispatch((dispatch, _ref3) => {
  let {
    panelName
  } = _ref3;
  return {
    onChange: () => dispatch(editPostStore).toggleEditorPanelEnabled(panelName)
  };
}))(BaseOption);
//# sourceMappingURL=enable-panel.js.map