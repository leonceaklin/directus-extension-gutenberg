"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = MetaBoxes;

var _element = require("@wordpress/element");

var _lodash = require("lodash");

var _data = require("@wordpress/data");

var _editor = require("@wordpress/editor");

var _metaBoxesArea = _interopRequireDefault(require("./meta-boxes-area"));

var _metaBoxVisibility = _interopRequireDefault(require("./meta-box-visibility"));

var _store = require("../../store");

/**
 * External dependencies
 */

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */
function MetaBoxes(_ref) {
  let {
    location
  } = _ref;
  const registry = (0, _data.useRegistry)();
  const {
    metaBoxes,
    areMetaBoxesInitialized,
    isEditorReady
  } = (0, _data.useSelect)(select => {
    const {
      __unstableIsEditorReady
    } = select(_editor.store);
    const {
      getMetaBoxesPerLocation,
      areMetaBoxesInitialized: _areMetaBoxesInitialized
    } = select(_store.store);
    return {
      metaBoxes: getMetaBoxesPerLocation(location),
      areMetaBoxesInitialized: _areMetaBoxesInitialized(),
      isEditorReady: __unstableIsEditorReady()
    };
  }, [location]); // When editor is ready, initialize postboxes (wp core script) and metabox
  // saving. This initializes all meta box locations, not just this specific
  // one.

  (0, _element.useEffect)(() => {
    if (isEditorReady && !areMetaBoxesInitialized) {
      registry.dispatch(_store.store).initializeMetaBoxes();
    }
  }, [isEditorReady, areMetaBoxesInitialized]);

  if (!areMetaBoxesInitialized) {
    return null;
  }

  return (0, _element.createElement)(_element.Fragment, null, (0, _lodash.map)(metaBoxes, _ref2 => {
    let {
      id
    } = _ref2;
    return (0, _element.createElement)(_metaBoxVisibility.default, {
      key: id,
      id: id
    });
  }), (0, _element.createElement)(_metaBoxesArea.default, {
    location: location
  }));
}
//# sourceMappingURL=index.js.map