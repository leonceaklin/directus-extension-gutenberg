{"version":3,"sources":["@wordpress/editor/src/components/provider/index.native.js"],"names":["postTypeEntities","name","baseURL","map","postTypeEntity","kind","transientEdits","blocks","selection","mergedEdits","meta","rawAttributes","NativeEditorProvider","Component","constructor","arguments","post","props","addEntities","receiveEntityRecords","type","getEditorSettings","settings","capabilities","maxSize","state","isHelpVisible","componentDidMount","locale","hostAppNamespace","updateSettings","getThemeColors","subscriptionParentGetHtml","serializeToNativeAction","subscriptionParentToggleHTMLMode","toggleMode","subscriptionParentSetTitle","payload","editTitle","title","subscriptionParentUpdateHtml","updateHtmlAction","html","subscriptionParentReplaceBlock","replaceBlockAction","clientId","subscriptionParentMediaAppend","blockName","mediaType","newBlock","id","mediaId","mediaUrl","indexAfterSelected","selectedBlockIndex","insertionIndex","blockCount","insertBlock","subscriptionParentUpdateEditorSettings","galleryWithImageBlocks","editorSettings","window","wp","galleryBlockV2Enabled","subscriptionParentUpdateCapabilities","updateCapabilitiesAction","subscriptionParentShowNotice","createSuccessNotice","message","subscriptionParentShowEditorHelp","setState","storedImpressions","impressions","NEW_BLOCK_TYPES","storedImpressionKeys","Object","keys","storedImpressionsCurrent","every","newKey","includes","componentWillUnmount","remove","rawStyles","rawFeatures","defaultEditorColors","defaultEditorGradients","componentDidUpdate","prevProps","isReady","isUnsupportedBlock","unsupportedBlockNames","filter","block","attributes","originalName","RNReactNativeGutenbergBridge","editorDidMount","mode","hasChanges","raw","content","contentInfo","characterCount","wordCount","paragraphCount","provideToNative_Html","parsed","resetEditorBlocksWithoutUndoLevel","blockClientId","replaceBlock","switchMode","clearSelectedBlock","render","children","supportSection","select","__unstableIsEditorReady","isEditorReady","getEditorBlocks","getEditedPostAttribute","getEditedPostContent","editorStore","getEditorMode","editPostStore","getBlockIndex","getSelectedBlockClientId","getGlobalBlockCount","getSettings","getBlockEditorSettings","blockEditorStore","colors","gradients","selectedBlockClientId","dispatch","editPost","resetEditorBlocks","switchEditorMode","coreStore","noticesStore","__unstableShouldCreateUndoLevel"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport memize from 'memize';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\n/**\n * WordPress dependencies\n */\nimport RNReactNativeGutenbergBridge, {\n\trequestBlockTypeImpressions,\n\tsetBlockTypeImpressions,\n\tsubscribeParentGetHtml,\n\tsubscribeParentToggleHTMLMode,\n\tsubscribeUpdateHtml,\n\tsubscribeSetTitle,\n\tsubscribeMediaAppend,\n\tsubscribeReplaceBlock,\n\tsubscribeUpdateEditorSettings,\n\tsubscribeUpdateCapabilities,\n\tsubscribeShowNotice,\n\tsubscribeShowEditorHelp,\n} from '@wordpress/react-native-bridge';\nimport { Component } from '@wordpress/element';\nimport { count as wordCount } from '@wordpress/wordcount';\nimport {\n\tparse,\n\tserialize,\n\tgetUnregisteredTypeHandlerName,\n\tcreateBlock,\n} from '@wordpress/blocks';\nimport { withDispatch, withSelect } from '@wordpress/data';\nimport { compose } from '@wordpress/compose';\nimport { applyFilters } from '@wordpress/hooks';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport { getGlobalStyles, getColorsAndGradients } from '@wordpress/components';\nimport { NEW_BLOCK_TYPES } from '@wordpress/block-library';\n\nconst postTypeEntities = [\n\t{ name: 'post', baseURL: '/wp/v2/posts' },\n\t{ name: 'page', baseURL: '/wp/v2/pages' },\n\t{ name: 'attachment', baseURL: '/wp/v2/media' },\n\t{ name: 'wp_block', baseURL: '/wp/v2/blocks' },\n].map( ( postTypeEntity ) => ( {\n\tkind: 'postType',\n\t...postTypeEntity,\n\ttransientEdits: {\n\t\tblocks: true,\n\t\tselection: true,\n\t},\n\tmergedEdits: {\n\t\tmeta: true,\n\t},\n\trawAttributes: [ 'title', 'excerpt', 'content' ],\n} ) );\nimport { EditorHelpTopics, store as editorStore } from '@wordpress/editor';\nimport { store as noticesStore } from '@wordpress/notices';\nimport { store as coreStore } from '@wordpress/core-data';\n// eslint-disable-next-line no-restricted-imports\nimport { store as editPostStore } from '@wordpress/edit-post';\n\n/**\n * Internal dependencies\n */\nimport EditorProvider from './index.js';\n\nclass NativeEditorProvider extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\t// Keep a local reference to `post` to detect changes.\n\t\tthis.post = this.props.post;\n\t\tthis.props.addEntities( postTypeEntities );\n\t\tthis.props.receiveEntityRecords(\n\t\t\t'postType',\n\t\t\tthis.post.type,\n\t\t\tthis.post\n\t\t);\n\n\t\tthis.getEditorSettings = memize(\n\t\t\t( settings, capabilities ) => ( {\n\t\t\t\t...settings,\n\t\t\t\tcapabilities,\n\t\t\t} ),\n\t\t\t{\n\t\t\t\tmaxSize: 1,\n\t\t\t}\n\t\t);\n\t\tthis.state = {\n\t\t\tisHelpVisible: false,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { capabilities, locale, hostAppNamespace, updateSettings } =\n\t\t\tthis.props;\n\n\t\tupdateSettings( {\n\t\t\t...capabilities,\n\t\t\t...this.getThemeColors( this.props ),\n\t\t\tlocale,\n\t\t\thostAppNamespace,\n\t\t} );\n\n\t\tthis.subscriptionParentGetHtml = subscribeParentGetHtml( () => {\n\t\t\tthis.serializeToNativeAction();\n\t\t} );\n\n\t\tthis.subscriptionParentToggleHTMLMode = subscribeParentToggleHTMLMode(\n\t\t\t() => {\n\t\t\t\tthis.toggleMode();\n\t\t\t}\n\t\t);\n\n\t\tthis.subscriptionParentSetTitle = subscribeSetTitle( ( payload ) => {\n\t\t\tthis.props.editTitle( payload.title );\n\t\t} );\n\n\t\tthis.subscriptionParentUpdateHtml = subscribeUpdateHtml(\n\t\t\t( payload ) => {\n\t\t\t\tthis.updateHtmlAction( payload.html );\n\t\t\t}\n\t\t);\n\n\t\tthis.subscriptionParentReplaceBlock = subscribeReplaceBlock(\n\t\t\t( payload ) => {\n\t\t\t\tthis.replaceBlockAction( payload.html, payload.clientId );\n\t\t\t}\n\t\t);\n\n\t\tthis.subscriptionParentMediaAppend = subscribeMediaAppend(\n\t\t\t( payload ) => {\n\t\t\t\tconst blockName = 'core/' + payload.mediaType;\n\t\t\t\tconst newBlock = createBlock( blockName, {\n\t\t\t\t\tid: payload.mediaId,\n\t\t\t\t\t[ payload.mediaType === 'image' ? 'url' : 'src' ]:\n\t\t\t\t\t\tpayload.mediaUrl,\n\t\t\t\t} );\n\n\t\t\t\tconst indexAfterSelected = this.props.selectedBlockIndex + 1;\n\t\t\t\tconst insertionIndex =\n\t\t\t\t\tindexAfterSelected || this.props.blockCount;\n\n\t\t\t\tthis.props.insertBlock( newBlock, insertionIndex );\n\t\t\t}\n\t\t);\n\n\t\tthis.subscriptionParentUpdateEditorSettings =\n\t\t\tsubscribeUpdateEditorSettings(\n\t\t\t\t( { galleryWithImageBlocks, ...editorSettings } ) => {\n\t\t\t\t\tif ( typeof galleryWithImageBlocks === 'boolean' ) {\n\t\t\t\t\t\twindow.wp.galleryBlockV2Enabled =\n\t\t\t\t\t\t\tgalleryWithImageBlocks;\n\t\t\t\t\t}\n\t\t\t\t\tupdateSettings( this.getThemeColors( editorSettings ) );\n\t\t\t\t}\n\t\t\t);\n\n\t\tthis.subscriptionParentUpdateCapabilities = subscribeUpdateCapabilities(\n\t\t\t( payload ) => {\n\t\t\t\tthis.updateCapabilitiesAction( payload );\n\t\t\t}\n\t\t);\n\n\t\tthis.subscriptionParentShowNotice = subscribeShowNotice(\n\t\t\t( payload ) => {\n\t\t\t\tthis.props.createSuccessNotice( payload.message );\n\t\t\t}\n\t\t);\n\n\t\tthis.subscriptionParentShowEditorHelp = subscribeShowEditorHelp( () => {\n\t\t\tthis.setState( { isHelpVisible: true } );\n\t\t} );\n\n\t\t// Request current block impressions from native app.\n\t\trequestBlockTypeImpressions( ( storedImpressions ) => {\n\t\t\tconst impressions = { ...NEW_BLOCK_TYPES, ...storedImpressions };\n\n\t\t\t// Persist impressions to JavaScript store.\n\t\t\tupdateSettings( { impressions } );\n\n\t\t\t// Persist impressions to native store if they do not include latest\n\t\t\t// `NEW_BLOCK_TYPES` configuration.\n\t\t\tconst storedImpressionKeys = Object.keys( storedImpressions );\n\t\t\tconst storedImpressionsCurrent = Object.keys(\n\t\t\t\tNEW_BLOCK_TYPES\n\t\t\t).every( ( newKey ) => storedImpressionKeys.includes( newKey ) );\n\t\t\tif ( ! storedImpressionsCurrent ) {\n\t\t\t\tsetBlockTypeImpressions( impressions );\n\t\t\t}\n\t\t} );\n\t}\n\n\tcomponentWillUnmount() {\n\t\tif ( this.subscriptionParentGetHtml ) {\n\t\t\tthis.subscriptionParentGetHtml.remove();\n\t\t}\n\n\t\tif ( this.subscriptionParentToggleHTMLMode ) {\n\t\t\tthis.subscriptionParentToggleHTMLMode.remove();\n\t\t}\n\n\t\tif ( this.subscriptionParentSetTitle ) {\n\t\t\tthis.subscriptionParentSetTitle.remove();\n\t\t}\n\n\t\tif ( this.subscriptionParentUpdateHtml ) {\n\t\t\tthis.subscriptionParentUpdateHtml.remove();\n\t\t}\n\n\t\tif ( this.subscriptionParentReplaceBlock ) {\n\t\t\tthis.subscriptionParentReplaceBlock.remove();\n\t\t}\n\n\t\tif ( this.subscriptionParentMediaAppend ) {\n\t\t\tthis.subscriptionParentMediaAppend.remove();\n\t\t}\n\n\t\tif ( this.subscriptionParentUpdateEditorSettings ) {\n\t\t\tthis.subscriptionParentUpdateEditorSettings.remove();\n\t\t}\n\n\t\tif ( this.subscriptionParentUpdateCapabilities ) {\n\t\t\tthis.subscriptionParentUpdateCapabilities.remove();\n\t\t}\n\n\t\tif ( this.subscriptionParentShowNotice ) {\n\t\t\tthis.subscriptionParentShowNotice.remove();\n\t\t}\n\n\t\tif ( this.subscriptionParentShowEditorHelp ) {\n\t\t\tthis.subscriptionParentShowEditorHelp.remove();\n\t\t}\n\t}\n\n\tgetThemeColors( { rawStyles, rawFeatures } ) {\n\t\tconst { defaultEditorColors, defaultEditorGradients } = this.props;\n\n\t\tif ( rawStyles && rawFeatures ) {\n\t\t\treturn getGlobalStyles( rawStyles, rawFeatures );\n\t\t}\n\n\t\treturn getColorsAndGradients(\n\t\t\tdefaultEditorColors,\n\t\t\tdefaultEditorGradients,\n\t\t\trawFeatures\n\t\t);\n\t}\n\n\tcomponentDidUpdate( prevProps ) {\n\t\tif ( ! prevProps.isReady && this.props.isReady ) {\n\t\t\tconst blocks = this.props.blocks;\n\t\t\tconst isUnsupportedBlock = ( { name } ) =>\n\t\t\t\tname === getUnregisteredTypeHandlerName();\n\t\t\tconst unsupportedBlockNames = blocks\n\t\t\t\t.filter( isUnsupportedBlock )\n\t\t\t\t.map( ( block ) => block.attributes.originalName );\n\t\t\tRNReactNativeGutenbergBridge.editorDidMount(\n\t\t\t\tunsupportedBlockNames\n\t\t\t);\n\t\t}\n\t}\n\n\tserializeToNativeAction() {\n\t\tconst title = this.props.title;\n\t\tlet html;\n\n\t\tif ( this.props.mode === 'text' ) {\n\t\t\t// The HTMLTextInput component does not update the store when user is doing changes\n\t\t\t// Let's request the HTML from the component's state directly.\n\t\t\thtml = applyFilters( 'native.persist-html' );\n\t\t} else {\n\t\t\thtml = serialize( this.props.blocks );\n\t\t}\n\n\t\tconst hasChanges =\n\t\t\ttitle !== this.post.title.raw || html !== this.post.content.raw;\n\n\t\t// Variable to store the content structure metrics.\n\t\tconst contentInfo = {};\n\t\tcontentInfo.characterCount = wordCount(\n\t\t\thtml,\n\t\t\t'characters_including_spaces'\n\t\t);\n\t\tcontentInfo.wordCount = wordCount( html, 'words' );\n\t\tcontentInfo.paragraphCount = this.props.paragraphCount;\n\t\tcontentInfo.blockCount = this.props.blockCount;\n\t\tRNReactNativeGutenbergBridge.provideToNative_Html(\n\t\t\thtml,\n\t\t\ttitle,\n\t\t\thasChanges,\n\t\t\tcontentInfo\n\t\t);\n\n\t\tif ( hasChanges ) {\n\t\t\tthis.post.title.raw = title;\n\t\t\tthis.post.content.raw = html;\n\t\t}\n\t}\n\n\tupdateHtmlAction( html ) {\n\t\tconst parsed = parse( html );\n\t\tthis.props.resetEditorBlocksWithoutUndoLevel( parsed );\n\t}\n\n\treplaceBlockAction( html, blockClientId ) {\n\t\tconst parsed = parse( html );\n\t\tthis.props.replaceBlock( blockClientId, parsed );\n\t}\n\n\ttoggleMode() {\n\t\tconst { mode, switchMode } = this.props;\n\t\t// Refresh html content first.\n\t\tthis.serializeToNativeAction();\n\t\t// Make sure to blur the selected block and dismiss the keyboard.\n\t\tthis.props.clearSelectedBlock();\n\t\tswitchMode( mode === 'visual' ? 'text' : 'visual' );\n\t}\n\n\tupdateCapabilitiesAction( capabilities ) {\n\t\tthis.props.updateSettings( capabilities );\n\t}\n\n\trender() {\n\t\tconst { children, post, capabilities, settings, ...props } = this.props;\n\t\tconst editorSettings = this.getEditorSettings( settings, capabilities );\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<EditorProvider\n\t\t\t\t\tpost={ this.post }\n\t\t\t\t\tsettings={ editorSettings }\n\t\t\t\t\t{ ...props }\n\t\t\t\t>\n\t\t\t\t\t<SafeAreaProvider>{ children }</SafeAreaProvider>\n\t\t\t\t</EditorProvider>\n\t\t\t\t<EditorHelpTopics\n\t\t\t\t\tisVisible={ this.state.isHelpVisible }\n\t\t\t\t\tonClose={ () => this.setState( { isHelpVisible: false } ) }\n\t\t\t\t\tclose={ () => this.setState( { isHelpVisible: false } ) }\n\t\t\t\t\tshowSupport={ capabilities?.supportSection === true }\n\t\t\t\t/>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default compose( [\n\twithSelect( ( select ) => {\n\t\tconst {\n\t\t\t__unstableIsEditorReady: isEditorReady,\n\t\t\tgetEditorBlocks,\n\t\t\tgetEditedPostAttribute,\n\t\t\tgetEditedPostContent,\n\t\t} = select( editorStore );\n\t\tconst { getEditorMode } = select( editPostStore );\n\n\t\tconst {\n\t\t\tgetBlockIndex,\n\t\t\tgetSelectedBlockClientId,\n\t\t\tgetGlobalBlockCount,\n\t\t\tgetSettings: getBlockEditorSettings,\n\t\t} = select( blockEditorStore );\n\n\t\tconst settings = getBlockEditorSettings();\n\t\tconst defaultEditorColors = settings?.colors ?? [];\n\t\tconst defaultEditorGradients = settings?.gradients ?? [];\n\n\t\tconst selectedBlockClientId = getSelectedBlockClientId();\n\t\treturn {\n\t\t\tmode: getEditorMode(),\n\t\t\tisReady: isEditorReady(),\n\t\t\tblocks: getEditorBlocks(),\n\t\t\ttitle: getEditedPostAttribute( 'title' ),\n\t\t\tgetEditedPostContent,\n\t\t\tdefaultEditorColors,\n\t\t\tdefaultEditorGradients,\n\t\t\tselectedBlockIndex: getBlockIndex( selectedBlockClientId ),\n\t\t\tblockCount: getGlobalBlockCount(),\n\t\t\tparagraphCount: getGlobalBlockCount( 'core/paragraph' ),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => {\n\t\tconst { editPost, resetEditorBlocks } = dispatch( editorStore );\n\t\tconst {\n\t\t\tupdateSettings,\n\t\t\tclearSelectedBlock,\n\t\t\tinsertBlock,\n\t\t\treplaceBlock,\n\t\t} = dispatch( blockEditorStore );\n\t\tconst { switchEditorMode } = dispatch( editPostStore );\n\t\tconst { addEntities, receiveEntityRecords } = dispatch( coreStore );\n\t\tconst { createSuccessNotice } = dispatch( noticesStore );\n\n\t\treturn {\n\t\t\tupdateSettings,\n\t\t\taddEntities,\n\t\t\tclearSelectedBlock,\n\t\t\tinsertBlock,\n\t\t\tcreateSuccessNotice,\n\t\t\teditTitle( title ) {\n\t\t\t\teditPost( { title } );\n\t\t\t},\n\t\t\treceiveEntityRecords,\n\t\t\tresetEditorBlocksWithoutUndoLevel( blocks ) {\n\t\t\t\tresetEditorBlocks( blocks, {\n\t\t\t\t\t__unstableShouldCreateUndoLevel: false,\n\t\t\t\t} );\n\t\t\t},\n\t\t\tswitchMode( mode ) {\n\t\t\t\tswitchEditorMode( mode );\n\t\t\t},\n\t\t\treplaceBlock,\n\t\t};\n\t} ),\n] )( NativeEditorProvider );\n"]}