"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BlockInspectorButton = BlockInspectorButton;
exports.default = void 0;

var _element = require("@wordpress/element");

var _i18n = require("@wordpress/i18n");

var _components = require("@wordpress/components");

var _data = require("@wordpress/data");

var _a11y = require("@wordpress/a11y");

var _keyboardShortcuts = require("@wordpress/keyboard-shortcuts");

var _store = require("../../store");

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */
const noop = () => {};

function BlockInspectorButton(_ref) {
  let {
    onClick = noop,
    small = false
  } = _ref;
  const {
    shortcut,
    areAdvancedSettingsOpened
  } = (0, _data.useSelect)(select => ({
    shortcut: select(_keyboardShortcuts.store).getShortcutRepresentation('core/edit-post/toggle-sidebar'),
    areAdvancedSettingsOpened: select(_store.store).getActiveGeneralSidebarName() === 'edit-post/block'
  }), []);
  const {
    openGeneralSidebar,
    closeGeneralSidebar
  } = (0, _data.useDispatch)(_store.store);
  const label = areAdvancedSettingsOpened ? (0, _i18n.__)('Hide more settings') : (0, _i18n.__)('Show more settings');
  return (0, _element.createElement)(_components.MenuItem, {
    onClick: () => {
      if (areAdvancedSettingsOpened) {
        closeGeneralSidebar();
        (0, _a11y.speak)((0, _i18n.__)('Block settings closed'));
      } else {
        openGeneralSidebar('edit-post/block');
        (0, _a11y.speak)((0, _i18n.__)('Additional settings are now available in the Editor block settings sidebar'));
      }

      onClick();
    },
    shortcut: shortcut
  }, !small && label);
}

var _default = BlockInspectorButton;
exports.default = _default;
//# sourceMappingURL=block-inspector-button.js.map