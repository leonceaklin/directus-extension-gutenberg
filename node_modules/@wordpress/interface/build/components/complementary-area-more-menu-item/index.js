"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ComplementaryAreaMoreMenuItem;

var _element = require("@wordpress/element");

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _icons = require("@wordpress/icons");

var _components = require("@wordpress/components");

var _complementaryAreaToggle = _interopRequireDefault(require("../complementary-area-toggle"));

var _actionItem = _interopRequireDefault(require("../action-item"));

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */
const PluginsMenuItem = _ref => {
  let {
    // Menu item is marked with unstable prop for backward compatibility.
    // They are removed so they don't leak to DOM elements.
    // @see https://github.com/WordPress/gutenberg/issues/14457
    __unstableExplicitMenuItem,
    __unstableTarget,
    ...restProps
  } = _ref;
  return (0, _element.createElement)(_components.MenuItem, restProps);
};

function ComplementaryAreaMoreMenuItem(_ref2) {
  let {
    scope,
    target,
    __unstableExplicitMenuItem,
    ...props
  } = _ref2;
  return (0, _element.createElement)(_complementaryAreaToggle.default, (0, _extends2.default)({
    as: toggleProps => {
      return (0, _element.createElement)(_actionItem.default, (0, _extends2.default)({
        __unstableExplicitMenuItem: __unstableExplicitMenuItem,
        __unstableTarget: `${scope}/${target}`,
        as: PluginsMenuItem,
        name: `${scope}/plugin-more-menu`
      }, toggleProps));
    },
    role: "menuitemcheckbox",
    selectedIcon: _icons.check,
    name: target,
    scope: scope
  }, props));
}
//# sourceMappingURL=index.js.map