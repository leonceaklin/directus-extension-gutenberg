{"version":3,"sources":["@wordpress/block-editor/src/components/inspector-controls-tabs/use-inspector-controls-tabs.js"],"names":["EMPTY_ARRAY","getShowTabs","blockName","tabSettings","window","__experimentalEnableBlockInspectorTabs","undefined","default","useInspectorControlsTabs","tabs","border","borderGroup","color","colorGroup","defaultGroup","dimensions","dimensionsGroup","list","listGroup","typography","typographyGroup","InspectorControlsGroups","listViewDisabled","listFills","Slot","__unstableName","length","push","TAB_LIST_VIEW","styleFills","TAB_STYLES","settingsFills","InspectorAdvancedControls","slotName","TAB_SETTINGS","select","blockEditorStore","getSettings","__experimentalBlockInspectorTabs","showTabs"],"mappings":";;;;;;;;;AAGA;;AACA;;AAKA;;AACA;;AACA;;AACA;;AACA;;AAbA;AACA;AACA;;AAIA;AACA;AACA;AAOA,MAAMA,WAAW,GAAG,EAApB;;AAEA,SAASC,WAAT,CAAsBC,SAAtB,EAAoD;AAAA;;AAAA,MAAnBC,WAAmB,uEAAL,EAAK;;AACnD;AACA;AACA,MAAK,aAAEC,MAAF,oCAAE,QAAQC,sCAAV,CAAL,EAAwD;AACvD,WAAO,KAAP;AACA,GALkD,CAOnD;;;AACA,MAAKF,WAAW,CAAED,SAAF,CAAX,KAA6BI,SAAlC,EAA8C;AAC7C,WAAOH,WAAW,CAAED,SAAF,CAAlB;AACA,GAVkD,CAYnD;;;AACA,MAAKC,WAAW,CAACI,OAAZ,KAAwBD,SAA7B,EAAyC;AACxC,WAAOH,WAAW,CAACI,OAAnB;AACA;;AAED,SAAO,IAAP;AACA;;AAEc,SAASC,wBAAT,CAAmCN,SAAnC,EAA+C;AAC7D,QAAMO,IAAI,GAAG,EAAb;AACA,QAAM;AACLC,IAAAA,MAAM,EAAEC,WADH;AAELC,IAAAA,KAAK,EAAEC,UAFF;AAGLN,IAAAA,OAAO,EAAEO,YAHJ;AAILC,IAAAA,UAAU,EAAEC,eAJP;AAKLC,IAAAA,IAAI,EAAEC,SALD;AAMLC,IAAAA,UAAU,EAAEC;AANP,MAOFC,eAPJ,CAF6D,CAW7D;;AACA,QAAMC,gBAAgB,GAAG,uCAA0BpB,SAA1B,CAAzB;AACA,QAAMqB,SAAS,GAAG,4CAAcL,SAAS,CAACM,IAAV,CAAeC,cAA7B,CAAlB;;AAEA,MAAK,CAAEH,gBAAF,IAAsB,CAAC,CAAEC,SAAzB,IAAsCA,SAAS,CAACG,MAArD,EAA8D;AAC7DjB,IAAAA,IAAI,CAACkB,IAAL,CAAWC,oBAAX;AACA,GAjB4D,CAmB7D;AACA;;;AACA,QAAMC,UAAU,GAAG,CAClB,IAAK,4CAAclB,WAAW,CAACa,IAAZ,CAAiBC,cAA/B,KAAmD,EAAxD,CADkB,EAElB,IAAK,4CAAcZ,UAAU,CAACW,IAAX,CAAgBC,cAA9B,KAAkD,EAAvD,CAFkB,EAGlB,IAAK,4CAAcT,eAAe,CAACQ,IAAhB,CAAqBC,cAAnC,KAAuD,EAA5D,CAHkB,EAIlB,IAAK,4CAAcL,eAAe,CAACI,IAAhB,CAAqBC,cAAnC,KAAuD,EAA5D,CAJkB,CAAnB;;AAOA,MAAKI,UAAU,CAACH,MAAhB,EAAyB;AACxBjB,IAAAA,IAAI,CAACkB,IAAL,CAAWG,iBAAX;AACA,GA9B4D,CAgC7D;AACA;;;AACA,QAAMC,aAAa,GAAG,CACrB,IAAK,4CAAcjB,YAAY,CAACU,IAAb,CAAkBC,cAAhC,KAAoD,EAAzD,CADqB,EAErB,IAAK,4CAAcO,6CAA0BC,QAAxC,KAAsD,EAA3D,CAFqB,CAAtB;;AAKA,MAAKF,aAAa,CAACL,MAAnB,EAA4B;AAC3BjB,IAAAA,IAAI,CAACkB,IAAL,CAAWO,mBAAX;AACA;;AAED,QAAM/B,WAAW,GAAG,qBAAagC,MAAF,IAAc;AAC5C,WAAOA,MAAM,CAAEC,YAAF,CAAN,CAA2BC,WAA3B,GACLC,gCADF;AAEA,GAHmB,EAGjB,EAHiB,CAApB;AAKA,QAAMC,QAAQ,GAAGtC,WAAW,CAAEC,SAAF,EAAaC,WAAb,CAA5B;AAEA,SAAOoC,QAAQ,GAAG9B,IAAH,GAAUT,WAAzB;AACA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __experimentalUseSlotFills as useSlotFills } from '@wordpress/components';\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport InspectorControlsGroups from '../inspector-controls/groups';\nimport useIsListViewTabDisabled from './use-is-list-view-tab-disabled';\nimport { InspectorAdvancedControls } from '../inspector-controls';\nimport { TAB_LIST_VIEW, TAB_SETTINGS, TAB_STYLES } from './utils';\nimport { store as blockEditorStore } from '../../store';\n\nconst EMPTY_ARRAY = [];\n\nfunction getShowTabs( blockName, tabSettings = {} ) {\n\t// Don't allow settings to force the display of tabs if the block inspector\n\t// tabs experiment hasn't been opted into.\n\tif ( ! window?.__experimentalEnableBlockInspectorTabs ) {\n\t\treturn false;\n\t}\n\n\t// Block specific setting takes precedence over generic default.\n\tif ( tabSettings[ blockName ] !== undefined ) {\n\t\treturn tabSettings[ blockName ];\n\t}\n\n\t// Use generic default if set over the Gutenberg experiment option.\n\tif ( tabSettings.default !== undefined ) {\n\t\treturn tabSettings.default;\n\t}\n\n\treturn true;\n}\n\nexport default function useInspectorControlsTabs( blockName ) {\n\tconst tabs = [];\n\tconst {\n\t\tborder: borderGroup,\n\t\tcolor: colorGroup,\n\t\tdefault: defaultGroup,\n\t\tdimensions: dimensionsGroup,\n\t\tlist: listGroup,\n\t\ttypography: typographyGroup,\n\t} = InspectorControlsGroups;\n\n\t// List View Tab: If there are any fills for the list group add that tab.\n\tconst listViewDisabled = useIsListViewTabDisabled( blockName );\n\tconst listFills = useSlotFills( listGroup.Slot.__unstableName );\n\n\tif ( ! listViewDisabled && !! listFills && listFills.length ) {\n\t\ttabs.push( TAB_LIST_VIEW );\n\t}\n\n\t// Styles Tab: Add this tab if there are any fills for block supports\n\t// e.g. border, color, spacing, typography, etc.\n\tconst styleFills = [\n\t\t...( useSlotFills( borderGroup.Slot.__unstableName ) || [] ),\n\t\t...( useSlotFills( colorGroup.Slot.__unstableName ) || [] ),\n\t\t...( useSlotFills( dimensionsGroup.Slot.__unstableName ) || [] ),\n\t\t...( useSlotFills( typographyGroup.Slot.__unstableName ) || [] ),\n\t];\n\n\tif ( styleFills.length ) {\n\t\ttabs.push( TAB_STYLES );\n\t}\n\n\t// Settings Tab: If there are any fills for the general InspectorControls\n\t// or Advanced Controls slot, then add this tab.\n\tconst settingsFills = [\n\t\t...( useSlotFills( defaultGroup.Slot.__unstableName ) || [] ),\n\t\t...( useSlotFills( InspectorAdvancedControls.slotName ) || [] ),\n\t];\n\n\tif ( settingsFills.length ) {\n\t\ttabs.push( TAB_SETTINGS );\n\t}\n\n\tconst tabSettings = useSelect( ( select ) => {\n\t\treturn select( blockEditorStore ).getSettings()\n\t\t\t.__experimentalBlockInspectorTabs;\n\t}, [] );\n\n\tconst showTabs = getShowTabs( blockName, tabSettings );\n\n\treturn showTabs ? tabs : EMPTY_ARRAY;\n}\n"]}