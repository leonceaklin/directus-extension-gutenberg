"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = PostSchedule;

var _element = require("@wordpress/element");

var _i18n = require("@wordpress/i18n");

var _components = require("@wordpress/components");

var _editor = require("@wordpress/editor");

/**
 * WordPress dependencies
 */
function PostSchedule() {
  // Use internal state instead of a ref to make sure that the component
  // re-renders when the popover's anchor updates.
  const [popoverAnchor, setPopoverAnchor] = (0, _element.useState)(null); // Memoize popoverProps to avoid returning a new object every time.

  const popoverProps = (0, _element.useMemo)(() => ({
    anchor: popoverAnchor
  }), [popoverAnchor]);
  return (0, _element.createElement)(_editor.PostScheduleCheck, null, (0, _element.createElement)(_components.PanelRow, {
    className: "edit-post-post-schedule",
    ref: setPopoverAnchor
  }, (0, _element.createElement)("span", null, (0, _i18n.__)('Publish')), (0, _element.createElement)(_components.Dropdown, {
    popoverProps: popoverProps,
    position: "bottom left",
    contentClassName: "edit-post-post-schedule__dialog",
    focusOnMount: true,
    renderToggle: _ref => {
      let {
        isOpen,
        onToggle
      } = _ref;
      return (0, _element.createElement)(PostScheduleToggle, {
        isOpen: isOpen,
        onClick: onToggle
      });
    },
    renderContent: _ref2 => {
      let {
        onClose
      } = _ref2;
      return (0, _element.createElement)(_editor.PostSchedule, {
        onClose: onClose
      });
    }
  })));
}

function PostScheduleToggle(_ref3) {
  let {
    isOpen,
    onClick
  } = _ref3;
  const label = (0, _editor.usePostScheduleLabel)();
  const fullLabel = (0, _editor.usePostScheduleLabel)({
    full: true
  });
  return (0, _element.createElement)(_components.Button, {
    className: "edit-post-post-schedule__toggle",
    variant: "tertiary",
    label: fullLabel,
    showTooltip: true,
    "aria-expanded": isOpen // translators: %s: Current post date.
    ,
    "aria-label": (0, _i18n.sprintf)((0, _i18n.__)('Change date: %s'), label),
    onClick: onClick
  }, label);
}
//# sourceMappingURL=index.js.map