{"version":3,"sources":["@wordpress/plugins/src/components/plugin-area/index.js"],"names":["PluginArea","Component","constructor","arguments","setPlugins","bind","memoizedContext","name","icon","state","getCurrentPluginsState","plugins","props","scope","map","render","Plugin","context","componentDidMount","componentWillUnmount","setState","display","onError"],"mappings":";;;;;;;;;AAQA;;AALA;;AAMA;;AAKA;;AACA;;AACA;;AAhBA;AACA;AACA;;AAGA;AACA;AACA;;AAIA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,UAAN,SAAyBC,kBAAzB,CAAmC;AAClCC,EAAAA,WAAW,GAAG;AACb,UAAO,GAAGC,SAAV;AAEA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAsB,IAAtB,CAAlB;AACA,SAAKC,eAAL,GAAuB,qBAAS,CAAEC,IAAF,EAAQC,IAAR,KAAkB;AACjD,aAAO;AACND,QAAAA,IADM;AAENC,QAAAA;AAFM,OAAP;AAIA,KALsB,CAAvB;AAMA,SAAKC,KAAL,GAAa,KAAKC,sBAAL,EAAb;AACA;;AAEDA,EAAAA,sBAAsB,GAAG;AACxB,WAAO;AACNC,MAAAA,OAAO,EAAE,qBAAY,KAAKC,KAAL,CAAWC,KAAvB,EAA+BC,GAA/B,CACR,QAA8B;AAAA,YAA5B;AAAEN,UAAAA,IAAF;AAAQD,UAAAA,IAAR;AAAcQ,UAAAA;AAAd,SAA4B;AAC7B,eAAO;AACNC,UAAAA,MAAM,EAAED,MADF;AAENE,UAAAA,OAAO,EAAE,KAAKX,eAAL,CAAsBC,IAAtB,EAA4BC,IAA5B;AAFH,SAAP;AAIA,OANO;AADH,KAAP;AAUA;;AAEDU,EAAAA,iBAAiB,GAAG;AACnB,0BACC,0BADD,EAEC,6CAFD,EAGC,KAAKd,UAHN;AAKA,0BACC,4BADD,EAEC,+CAFD,EAGC,KAAKA,UAHN;AAKA;;AAEDe,EAAAA,oBAAoB,GAAG;AACtB,6BACC,0BADD,EAEC,6CAFD;AAIA,6BACC,4BADD,EAEC,+CAFD;AAIA;;AAEDf,EAAAA,UAAU,GAAG;AACZ,SAAKgB,QAAL,CAAe,KAAKV,sBAApB;AACA;;AAEDK,EAAAA,MAAM,GAAG;AACR,WACC;AAAK,MAAA,KAAK,EAAG;AAAEM,QAAAA,OAAO,EAAE;AAAX;AAAb,OACG,KAAKZ,KAAL,CAAWE,OAAX,CAAmBG,GAAnB,CAAwB;AAAA,UAAE;AAAEG,QAAAA,OAAF;AAAWD,QAAAA;AAAX,OAAF;AAAA,aACzB,4BAAC,oCAAD;AACC,QAAA,GAAG,EAAGC,OAAO,CAACV,IADf;AAEC,QAAA,KAAK,EAAGU;AAFT,SAIC,4BAAC,wCAAD;AACC,QAAA,IAAI,EAAGA,OAAO,CAACV,IADhB;AAEC,QAAA,OAAO,EAAG,KAAKK,KAAL,CAAWU;AAFtB,SAIC,4BAAC,MAAD,OAJD,CAJD,CADyB;AAAA,KAAxB,CADH,CADD;AAiBA;;AAzEiC;;eA4EpBtB,U","sourcesContent":["/**\n * External dependencies\n */\nimport memoize from 'memize';\n\n/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\nimport { addAction, removeAction } from '@wordpress/hooks';\n\n/**\n * Internal dependencies\n */\nimport { PluginContextProvider } from '../plugin-context';\nimport { PluginErrorBoundary } from '../plugin-error-boundary';\nimport { getPlugins } from '../../api';\n\n/**\n * A component that renders all plugin fills in a hidden div.\n *\n * @example\n * ```js\n * // Using ES5 syntax\n * var el = wp.element.createElement;\n * var PluginArea = wp.plugins.PluginArea;\n *\n * function Layout() {\n * \treturn el(\n * \t\t'div',\n * \t\t{ scope: 'my-page' },\n * \t\t'Content of the page',\n * \t\tPluginArea\n * \t);\n * }\n * ```\n *\n * @example\n * ```js\n * // Using ESNext syntax\n * import { PluginArea } from '@wordpress/plugins';\n *\n * const Layout = () => (\n * \t<div>\n * \t\tContent of the page\n * \t\t<PluginArea scope=\"my-page\" />\n * \t</div>\n * );\n * ```\n *\n * @return {WPComponent} The component to be rendered.\n */\nclass PluginArea extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.setPlugins = this.setPlugins.bind( this );\n\t\tthis.memoizedContext = memoize( ( name, icon ) => {\n\t\t\treturn {\n\t\t\t\tname,\n\t\t\t\ticon,\n\t\t\t};\n\t\t} );\n\t\tthis.state = this.getCurrentPluginsState();\n\t}\n\n\tgetCurrentPluginsState() {\n\t\treturn {\n\t\t\tplugins: getPlugins( this.props.scope ).map(\n\t\t\t\t( { icon, name, render } ) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tPlugin: render,\n\t\t\t\t\t\tcontext: this.memoizedContext( name, icon ),\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t),\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\taddAction(\n\t\t\t'plugins.pluginRegistered',\n\t\t\t'core/plugins/plugin-area/plugins-registered',\n\t\t\tthis.setPlugins\n\t\t);\n\t\taddAction(\n\t\t\t'plugins.pluginUnregistered',\n\t\t\t'core/plugins/plugin-area/plugins-unregistered',\n\t\t\tthis.setPlugins\n\t\t);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tremoveAction(\n\t\t\t'plugins.pluginRegistered',\n\t\t\t'core/plugins/plugin-area/plugins-registered'\n\t\t);\n\t\tremoveAction(\n\t\t\t'plugins.pluginUnregistered',\n\t\t\t'core/plugins/plugin-area/plugins-unregistered'\n\t\t);\n\t}\n\n\tsetPlugins() {\n\t\tthis.setState( this.getCurrentPluginsState );\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div style={ { display: 'none' } }>\n\t\t\t\t{ this.state.plugins.map( ( { context, Plugin } ) => (\n\t\t\t\t\t<PluginContextProvider\n\t\t\t\t\t\tkey={ context.name }\n\t\t\t\t\t\tvalue={ context }\n\t\t\t\t\t>\n\t\t\t\t\t\t<PluginErrorBoundary\n\t\t\t\t\t\t\tname={ context.name }\n\t\t\t\t\t\t\tonError={ this.props.onError }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Plugin />\n\t\t\t\t\t\t</PluginErrorBoundary>\n\t\t\t\t\t</PluginContextProvider>\n\t\t\t\t) ) }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default PluginArea;\n"]}