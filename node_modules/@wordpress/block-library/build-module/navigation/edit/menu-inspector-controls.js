import { createElement, Fragment } from "@wordpress/element";

/**
 * WordPress dependencies
 */
import { __experimentalOffCanvasEditor as OffCanvasEditor, InspectorControls, store as blockEditorStore } from '@wordpress/block-editor';
import { PanelBody, __experimentalHStack as HStack, __experimentalHeading as Heading } from '@wordpress/components';
import { useSelect } from '@wordpress/data';
import { __ } from '@wordpress/i18n';
/**
 * Internal dependencies
 */

import ManageMenusButton from './manage-menus-button';
import NavigationMenuSelector from './navigation-menu-selector';

const MenuInspectorControls = _ref => {
  var _window, _window2;

  let {
    clientId,
    createNavigationMenuIsSuccess,
    createNavigationMenuIsError,
    currentMenuId = null,
    isNavigationMenuMissing,
    isManageMenusButtonDisabled,
    onCreateNew,
    onSelectClassicMenu,
    onSelectNavigationMenu
  } = _ref;
  const isOffCanvasNavigationEditorEnabled = ((_window = window) === null || _window === void 0 ? void 0 : _window.__experimentalEnableOffCanvasNavigationEditor) === true;
  const menuControlsSlot = (_window2 = window) !== null && _window2 !== void 0 && _window2.__experimentalEnableBlockInspectorTabs ? 'list' : undefined;
  /* translators: %s: The name of a menu. */

  const actionLabel = __("Switch to '%s'"); // Provide a hierarchy of clientIds for the given Navigation block (clientId).
  // This is required else the list view will display the entire block tree.


  const clientIdsTree = useSelect(select => {
    const {
      __unstableGetClientIdsTree
    } = select(blockEditorStore);
    return __unstableGetClientIdsTree(clientId);
  }, [clientId]);
  return createElement(InspectorControls, {
    __experimentalGroup: menuControlsSlot
  }, createElement(PanelBody, {
    title: isOffCanvasNavigationEditorEnabled ? null : __('Menu')
  }, isOffCanvasNavigationEditorEnabled ? createElement(Fragment, null, createElement(HStack, {
    className: "wp-block-navigation-off-canvas-editor__header"
  }, createElement(Heading, {
    className: "wp-block-navigation-off-canvas-editor__title",
    level: 2
  }, __('Menu')), createElement(NavigationMenuSelector, {
    currentMenuId: currentMenuId,
    onSelectClassicMenu: onSelectClassicMenu,
    onSelectNavigationMenu: onSelectNavigationMenu,
    onCreateNew: onCreateNew,
    createNavigationMenuIsSuccess: createNavigationMenuIsSuccess,
    createNavigationMenuIsError: createNavigationMenuIsError,
    actionLabel: actionLabel
  })), currentMenuId && isNavigationMenuMissing ? createElement("p", null, __('Select or create a menu')) : createElement(OffCanvasEditor, {
    blocks: clientIdsTree,
    isExpanded: true,
    selectBlockInCanvas: false
  })) : createElement(Fragment, null, createElement(NavigationMenuSelector, {
    currentMenuId: currentMenuId,
    onSelectClassicMenu: onSelectClassicMenu,
    onSelectNavigationMenu: onSelectNavigationMenu,
    onCreateNew: onCreateNew,
    createNavigationMenuIsSuccess: createNavigationMenuIsSuccess,
    createNavigationMenuIsError: createNavigationMenuIsError,
    actionLabel: actionLabel
  }), createElement(ManageMenusButton, {
    disabled: isManageMenusButtonDisabled
  }))));
};

export default MenuInspectorControls;
//# sourceMappingURL=menu-inspector-controls.js.map