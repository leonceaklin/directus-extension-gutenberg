import { createElement } from "@wordpress/element";

/**
 * WordPress dependencies
 */
import { useMemo, useState } from '@wordpress/element';
import { PanelRow, Dropdown, Button } from '@wordpress/components';
import { __, sprintf } from '@wordpress/i18n';
import { PostURLCheck, PostURL as PostURLForm, usePostURLLabel } from '@wordpress/editor';
export default function PostURL() {
  // Use internal state instead of a ref to make sure that the component
  // re-renders when the popover's anchor updates.
  const [popoverAnchor, setPopoverAnchor] = useState(null); // Memoize popoverProps to avoid returning a new object every time.

  const popoverProps = useMemo(() => ({
    anchor: popoverAnchor
  }), [popoverAnchor]);
  return createElement(PostURLCheck, null, createElement(PanelRow, {
    className: "edit-post-post-url",
    ref: setPopoverAnchor
  }, createElement("span", null, __('URL')), createElement(Dropdown, {
    popoverProps: popoverProps,
    position: "bottom left",
    className: "edit-post-post-url__dropdown",
    contentClassName: "edit-post-post-url__dialog",
    focusOnMount: true,
    renderToggle: _ref => {
      let {
        isOpen,
        onToggle
      } = _ref;
      return createElement(PostURLToggle, {
        isOpen: isOpen,
        onClick: onToggle
      });
    },
    renderContent: _ref2 => {
      let {
        onClose
      } = _ref2;
      return createElement(PostURLForm, {
        onClose: onClose
      });
    }
  })));
}

function PostURLToggle(_ref3) {
  let {
    isOpen,
    onClick
  } = _ref3;
  const label = usePostURLLabel();
  return createElement(Button, {
    className: "edit-post-post-url__toggle",
    variant: "tertiary",
    "aria-expanded": isOpen // translators: %s: Current post URL.
    ,
    "aria-label": sprintf(__('Change URL: %s'), label),
    onClick: onClick
  }, label);
}
//# sourceMappingURL=index.js.map