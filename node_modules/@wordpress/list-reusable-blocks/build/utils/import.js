"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _apiFetch = _interopRequireDefault(require("@wordpress/api-fetch"));

var _file = require("./file");

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */

/**
 * Import a reusable block from a JSON file.
 *
 * @param {File} file File.
 * @return {Promise} Promise returning the imported reusable block.
 */
async function importReusableBlock(file) {
  const fileContent = await (0, _file.readTextFile)(file);
  let parsedContent;

  try {
    parsedContent = JSON.parse(fileContent);
  } catch (e) {
    throw new Error('Invalid JSON file');
  }

  if (parsedContent.__file !== 'wp_block' || !parsedContent.title || !parsedContent.content || typeof parsedContent.title !== 'string' || typeof parsedContent.content !== 'string') {
    throw new Error('Invalid Reusable block JSON file');
  }

  const postType = await (0, _apiFetch.default)({
    path: `/wp/v2/types/wp_block`
  });
  const reusableBlock = await (0, _apiFetch.default)({
    path: `/wp/v2/${postType.rest_base}`,
    data: {
      title: parsedContent.title,
      content: parsedContent.content,
      status: 'publish'
    },
    method: 'POST'
  });
  return reusableBlock;
}

var _default = importReusableBlock;
exports.default = _default;
//# sourceMappingURL=import.js.map