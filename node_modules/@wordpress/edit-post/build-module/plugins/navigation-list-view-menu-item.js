var _window;

import { createElement } from "@wordpress/element";

/**
 * WordPress dependencies
 */
import { BlockEditorProvider, __unstableBlockToolbarLastItem, __unstableBlockNameContext } from '@wordpress/block-editor';
import { ToolbarButton, ToolbarGroup } from '@wordpress/components';
import { useDispatch } from '@wordpress/data';
import { Fragment } from '@wordpress/element';
import { __ } from '@wordpress/i18n';
import { listView } from '@wordpress/icons';

const NavMenuSidebarToggle = () => {
  // eslint-disable-next-line @wordpress/data-no-store-string-literals
  const {
    openGeneralSidebar
  } = useDispatch('core/edit-post');
  return createElement(ToolbarGroup, null, createElement(ToolbarButton, {
    className: "components-toolbar__control",
    label: __('Open navigation list view'),
    onClick: () => openGeneralSidebar('edit-post/block'),
    icon: listView
  }));
};

let MaybeNavMenuSidebarToggle = Fragment;
const isOffCanvasNavigationEditorEnabled = ((_window = window) === null || _window === void 0 ? void 0 : _window.__experimentalEnableOffCanvasNavigationEditor) === true;

if (isOffCanvasNavigationEditorEnabled) {
  MaybeNavMenuSidebarToggle = NavMenuSidebarToggle;
}

const NavigationEditMenuItem = () => {
  return createElement(BlockEditorProvider, null, createElement(__unstableBlockToolbarLastItem, null, createElement(__unstableBlockNameContext.Consumer, null, blockName => blockName === 'core/navigation' && createElement(MaybeNavMenuSidebarToggle, null))));
};

export default NavigationEditMenuItem;
//# sourceMappingURL=navigation-list-view-menu-item.js.map