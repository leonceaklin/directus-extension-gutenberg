"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ConvertToLinksModal;

var _element = require("@wordpress/element");

var _components = require("@wordpress/components");

var _i18n = require("@wordpress/i18n");

var _data = require("@wordpress/data");

var _coreData = require("@wordpress/core-data");

var _blockEditor = require("@wordpress/block-editor");

var _convertToNavigationLinks = require("./convert-to-navigation-links");

var _constants = require("./constants");

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */

/**
 * Internal dependencies
 */
const PAGE_FIELDS = ['id', 'title', 'link', 'type', 'parent'];
const MAX_PAGE_COUNT = 100;

function ConvertToLinksModal(_ref) {
  let {
    onClose,
    clientId
  } = _ref;
  const {
    records: pages,
    hasResolved: pagesFinished
  } = (0, _coreData.useEntityRecords)('postType', 'page', {
    per_page: MAX_PAGE_COUNT,
    _fields: PAGE_FIELDS,
    // TODO: When https://core.trac.wordpress.org/ticket/39037 REST API support for multiple orderby
    // values is resolved, update 'orderby' to [ 'menu_order', 'post_title' ] to provide a consistent
    // sort.
    orderby: 'menu_order',
    order: 'asc'
  });
  const {
    replaceBlock
  } = (0, _data.useDispatch)(_blockEditor.store);
  return (0, _element.createElement)(_components.Modal, {
    closeLabel: (0, _i18n.__)('Close'),
    onRequestClose: onClose,
    title: (0, _i18n.__)('Customize this menu'),
    className: 'wp-block-page-list-modal',
    aria: {
      describedby: 'wp-block-page-list-modal__description'
    }
  }, (0, _element.createElement)("p", {
    id: 'wp-block-page-list-modal__description'
  }, _constants.convertDescription), (0, _element.createElement)("div", {
    className: "wp-block-page-list-modal-buttons"
  }, (0, _element.createElement)(_components.Button, {
    variant: "tertiary",
    onClick: onClose
  }, (0, _i18n.__)('Cancel')), (0, _element.createElement)(_components.Button, {
    variant: "primary",
    disabled: !pagesFinished,
    onClick: () => {
      const navigationLinks = (0, _convertToNavigationLinks.convertToNavigationLinks)(pages); // Replace the Page List block with the Navigation Links.

      replaceBlock(clientId, navigationLinks);
    }
  }, (0, _i18n.__)('Customize'))));
}
//# sourceMappingURL=convert-to-links-modal.js.map