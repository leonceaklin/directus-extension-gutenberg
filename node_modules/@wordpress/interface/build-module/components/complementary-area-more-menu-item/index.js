import _extends from "@babel/runtime/helpers/esm/extends";
import { createElement } from "@wordpress/element";

/**
 * WordPress dependencies
 */
import { check } from '@wordpress/icons';
import { MenuItem } from '@wordpress/components';
/**
 * Internal dependencies
 */

import ComplementaryAreaToggle from '../complementary-area-toggle';
import ActionItem from '../action-item';

const PluginsMenuItem = _ref => {
  let {
    // Menu item is marked with unstable prop for backward compatibility.
    // They are removed so they don't leak to DOM elements.
    // @see https://github.com/WordPress/gutenberg/issues/14457
    __unstableExplicitMenuItem,
    __unstableTarget,
    ...restProps
  } = _ref;
  return createElement(MenuItem, restProps);
};

export default function ComplementaryAreaMoreMenuItem(_ref2) {
  let {
    scope,
    target,
    __unstableExplicitMenuItem,
    ...props
  } = _ref2;
  return createElement(ComplementaryAreaToggle, _extends({
    as: toggleProps => {
      return createElement(ActionItem, _extends({
        __unstableExplicitMenuItem: __unstableExplicitMenuItem,
        __unstableTarget: `${scope}/${target}`,
        as: PluginsMenuItem,
        name: `${scope}/plugin-more-menu`
      }, toggleProps));
    },
    role: "menuitemcheckbox",
    selectedIcon: check,
    name: target,
    scope: scope
  }, props));
}
//# sourceMappingURL=index.js.map