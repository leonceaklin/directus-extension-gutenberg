"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  registerLegacyWidgetBlock: true,
  registerWidgetGroupBlock: true,
  registerLegacyWidgetVariations: true
};
exports.registerLegacyWidgetBlock = registerLegacyWidgetBlock;
Object.defineProperty(exports, "registerLegacyWidgetVariations", {
  enumerable: true,
  get: function () {
    return _registerLegacyWidgetVariations.default;
  }
});
exports.registerWidgetGroupBlock = registerWidgetGroupBlock;

var _blocks = require("@wordpress/blocks");

var legacyWidget = _interopRequireWildcard(require("./blocks/legacy-widget"));

var widgetGroup = _interopRequireWildcard(require("./blocks/widget-group"));

var _components = require("./components");

Object.keys(_components).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _components[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _components[key];
    }
  });
});

var _utils = require("./utils");

Object.keys(_utils).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _utils[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _utils[key];
    }
  });
});

var _registerLegacyWidgetVariations = _interopRequireDefault(require("./register-legacy-widget-variations"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */

/**
 * Registers the Legacy Widget block.
 *
 * Note that for the block to be useful, any scripts required by a widget must
 * be loaded into the page.
 *
 * @param {Object} supports Block support settings.
 * @see https://developer.wordpress.org/block-editor/how-to-guides/widgets/legacy-widget-block/
 */
function registerLegacyWidgetBlock() {
  let supports = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  const {
    metadata,
    settings,
    name
  } = legacyWidget;
  (0, _blocks.registerBlockType)({
    name,
    ...metadata
  }, { ...settings,
    supports: { ...settings.supports,
      ...supports
    }
  });
}
/**
 * Registers the Widget Group block.
 */


function registerWidgetGroupBlock() {
  const {
    metadata,
    settings,
    name
  } = widgetGroup;
  (0, _blocks.registerBlockType)({
    name,
    ...metadata
  }, settings);
}
//# sourceMappingURL=index.js.map