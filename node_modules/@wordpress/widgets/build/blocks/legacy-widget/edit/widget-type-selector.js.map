{"version":3,"sources":["@wordpress/widgets/src/blocks/legacy-widget/edit/widget-type-selector.js"],"names":["WidgetTypeSelector","selectedId","onSelect","widgetTypes","select","hiddenIds","blockEditorStore","getSettings","widgetTypesToHideFromLegacyWidgetBlock","coreStore","getWidgetTypes","per_page","filter","widgetType","includes","id","length","value","label","map","name","selected","find","isMulti","is_multi"],"mappings":";;;;;;;;;AAGA;;AACA;;AACA;;AACA;;AACA;;AAPA;AACA;AACA;AAOe,SAASA,kBAAT,OAAwD;AAAA,MAA3B;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,GAA2B;AACtE,QAAMC,WAAW,GAAG,qBAAaC,MAAF,IAAc;AAAA;;AAC5C,UAAMC,SAAS,mDACdD,MAAM,CAAEE,kBAAF,CAAN,CAA2BC,WAA3B,EADc,wDACd,oBACGC,sCAFW,yEAE+B,EAF9C;AAGA,oCAAOJ,MAAM,CAAEK,eAAF,CAAN,CACLC,cADK,CACW;AAAEC,MAAAA,QAAQ,EAAE,CAAC;AAAb,KADX,CAAP,0DAAO,sBAEJC,MAFI,CAEMC,UAAF,IAAkB,CAAER,SAAS,CAACS,QAAV,CAAoBD,UAAU,CAACE,EAA/B,CAFxB,CAAP;AAGA,GAPmB,EAOjB,EAPiB,CAApB;;AASA,MAAK,CAAEZ,WAAP,EAAqB;AACpB,WAAO,4BAAC,mBAAD,OAAP;AACA;;AAED,MAAKA,WAAW,CAACa,MAAZ,KAAuB,CAA5B,EAAgC;AAC/B,WAAO,cAAI,iCAAJ,CAAP;AACA;;AAED,SACC,4BAAC,yBAAD;AACC,IAAA,uBAAuB,MADxB;AAEC,IAAA,KAAK,EAAG,cAAI,oCAAJ,CAFT;AAGC,IAAA,KAAK,EAAGf,UAAH,aAAGA,UAAH,cAAGA,UAAH,GAAiB,EAHvB;AAIC,IAAA,OAAO,EAAG,CACT;AAAEgB,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,KAAK,EAAE,cAAI,eAAJ;AAApB,KADS,EAET,GAAGf,WAAW,CAACgB,GAAZ,CAAmBN,UAAF,KAAoB;AACvCI,MAAAA,KAAK,EAAEJ,UAAU,CAACE,EADqB;AAEvCG,MAAAA,KAAK,EAAEL,UAAU,CAACO;AAFqB,KAApB,CAAjB,CAFM,CAJX;AAWC,IAAA,QAAQ,EAAKH,KAAF,IAAa;AACvB,UAAKA,KAAL,EAAa;AACZ,cAAMI,QAAQ,GAAGlB,WAAW,CAACmB,IAAZ,CACdT,UAAF,IAAkBA,UAAU,CAACE,EAAX,KAAkBE,KADpB,CAAjB;AAGAf,QAAAA,QAAQ,CAAE;AACTD,UAAAA,UAAU,EAAEoB,QAAQ,CAACN,EADZ;AAETQ,UAAAA,OAAO,EAAEF,QAAQ,CAACG;AAFT,SAAF,CAAR;AAIA,OARD,MAQO;AACNtB,QAAAA,QAAQ,CAAE;AAAED,UAAAA,UAAU,EAAE;AAAd,SAAF,CAAR;AACA;AACD;AAvBF,IADD;AA2BA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { Spinner, SelectControl } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { useSelect } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\n\nexport default function WidgetTypeSelector( { selectedId, onSelect } ) {\n\tconst widgetTypes = useSelect( ( select ) => {\n\t\tconst hiddenIds =\n\t\t\tselect( blockEditorStore ).getSettings()\n\t\t\t\t?.widgetTypesToHideFromLegacyWidgetBlock ?? [];\n\t\treturn select( coreStore )\n\t\t\t.getWidgetTypes( { per_page: -1 } )\n\t\t\t?.filter( ( widgetType ) => ! hiddenIds.includes( widgetType.id ) );\n\t}, [] );\n\n\tif ( ! widgetTypes ) {\n\t\treturn <Spinner />;\n\t}\n\n\tif ( widgetTypes.length === 0 ) {\n\t\treturn __( 'There are no widgets available.' );\n\t}\n\n\treturn (\n\t\t<SelectControl\n\t\t\t__nextHasNoMarginBottom\n\t\t\tlabel={ __( 'Select a legacy widget to display:' ) }\n\t\t\tvalue={ selectedId ?? '' }\n\t\t\toptions={ [\n\t\t\t\t{ value: '', label: __( 'Select widget' ) },\n\t\t\t\t...widgetTypes.map( ( widgetType ) => ( {\n\t\t\t\t\tvalue: widgetType.id,\n\t\t\t\t\tlabel: widgetType.name,\n\t\t\t\t} ) ),\n\t\t\t] }\n\t\t\tonChange={ ( value ) => {\n\t\t\t\tif ( value ) {\n\t\t\t\t\tconst selected = widgetTypes.find(\n\t\t\t\t\t\t( widgetType ) => widgetType.id === value\n\t\t\t\t\t);\n\t\t\t\t\tonSelect( {\n\t\t\t\t\t\tselectedId: selected.id,\n\t\t\t\t\t\tisMulti: selected.is_multi,\n\t\t\t\t\t} );\n\t\t\t\t} else {\n\t\t\t\t\tonSelect( { selectedId: null } );\n\t\t\t\t}\n\t\t\t} }\n\t\t/>\n\t);\n}\n"]}