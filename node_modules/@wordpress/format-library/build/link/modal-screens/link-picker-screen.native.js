"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _element = require("@wordpress/element");

var _reactNative = require("react-native");

var _native = require("@react-navigation/native");

var _components = require("@wordpress/components");

var _screens = _interopRequireDefault(require("./screens"));

/**
 * External dependencies
 */

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */
const LinkPickerScreen = () => {
  const navigation = (0, _native.useNavigation)();
  const route = (0, _native.useRoute)();
  const navigateToLinkTimeoutRef = (0, _element.useRef)(null);
  const navigateBackTimeoutRef = (0, _element.useRef)(null);

  const onLinkPicked = _ref => {
    let {
      url,
      title
    } = _ref;

    _reactNative.Keyboard.dismiss();

    navigateToLinkTimeoutRef.current = setTimeout(() => {
      navigation.navigate(_screens.default.settings, {
        inputValue: url,
        text: title
      });
    }, 100);
  };

  const onCancel = () => {
    _reactNative.Keyboard.dismiss();

    navigateBackTimeoutRef.current = setTimeout(() => {
      navigation.goBack();
    }, 100);
  };

  (0, _element.useEffect)(() => {
    return () => {
      clearTimeout(navigateToLinkTimeoutRef.current);
      clearTimeout(navigateBackTimeoutRef.current);
    };
  }, []);
  const {
    inputValue
  } = route.params;
  return (0, _element.useMemo)(() => {
    return (0, _element.createElement)(_components.LinkPicker, {
      value: inputValue,
      onLinkPicked: onLinkPicked,
      onCancel: onCancel
    });
  }, [inputValue]);
};

var _default = LinkPickerScreen;
exports.default = _default;
//# sourceMappingURL=link-picker-screen.native.js.map