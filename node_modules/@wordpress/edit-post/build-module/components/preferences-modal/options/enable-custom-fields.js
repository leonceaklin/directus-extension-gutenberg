import { createElement, Fragment } from "@wordpress/element";

/**
 * WordPress dependencies
 */
import { useState } from '@wordpress/element';
import { __ } from '@wordpress/i18n';
import { Button } from '@wordpress/components';
import { withSelect } from '@wordpress/data';
import { store as editorStore } from '@wordpress/editor';
import { ___unstablePreferencesModalBaseOption as BaseOption } from '@wordpress/interface';
export function CustomFieldsConfirmation(_ref) {
  let {
    willEnable
  } = _ref;
  const [isReloading, setIsReloading] = useState(false);
  return createElement(Fragment, null, createElement("p", {
    className: "edit-post-preferences-modal__custom-fields-confirmation-message"
  }, __('A page reload is required for this change. Make sure your content is saved before reloading.')), createElement(Button, {
    className: "edit-post-preferences-modal__custom-fields-confirmation-button",
    variant: "secondary",
    isBusy: isReloading,
    disabled: isReloading,
    onClick: () => {
      setIsReloading(true);
      document.getElementById('toggle-custom-fields-form').submit();
    }
  }, willEnable ? __('Enable & Reload') : __('Disable & Reload')));
}
export function EnableCustomFieldsOption(_ref2) {
  let {
    label,
    areCustomFieldsEnabled
  } = _ref2;
  const [isChecked, setIsChecked] = useState(areCustomFieldsEnabled);
  return createElement(BaseOption, {
    label: label,
    isChecked: isChecked,
    onChange: setIsChecked
  }, isChecked !== areCustomFieldsEnabled && createElement(CustomFieldsConfirmation, {
    willEnable: isChecked
  }));
}
export default withSelect(select => ({
  areCustomFieldsEnabled: !!select(editorStore).getEditorSettings().enableCustomFields
}))(EnableCustomFieldsOption);
//# sourceMappingURL=enable-custom-fields.js.map