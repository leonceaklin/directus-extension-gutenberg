import { createElement } from "@wordpress/element";

/**
 * External dependencies
 */
import { Text, Image, View } from 'react-native';
/**
 * WordPress dependencies
 */

import { usePreferredColorScheme, usePreferredColorSchemeStyle } from '@wordpress/compose';
/**
 * Internal dependencies
 */

import styles from './style.scss';
export const HelpDetailBodyText = _ref => {
  let {
    text
  } = _ref;
  const bodyStyle = usePreferredColorSchemeStyle(styles.helpDetailBody, styles.helpDetailBodyDark);
  return createElement(Text, {
    selectable: true,
    style: bodyStyle
  }, text);
};
export const HelpDetailSectionHeadingText = _ref2 => {
  let {
    text,
    badge
  } = _ref2;
  const headingTextStyle = usePreferredColorSchemeStyle(styles.helpDetailSectionHeadingText, styles.helpDetailSectionHeadingTextDark);
  return createElement(View, {
    style: styles.helpDetailSectionHeading
  }, badge && createElement(HelpDetailBadge, {
    text: badge
  }), createElement(Text, {
    accessibilityRole: "header",
    selectable: true,
    style: headingTextStyle
  }, text));
};
export const HelpDetailImage = _ref3 => {
  let {
    accessible,
    accessibilityLabel,
    source,
    sourceDarkMode
  } = _ref3;
  const imageStyle = usePreferredColorSchemeStyle(styles.helpDetailImage, styles.helpDetailImageDark);
  const darkModeEnabled = usePreferredColorScheme() === 'dark';
  return createElement(Image, {
    accessible: accessible,
    accessibilityLabel: accessibilityLabel,
    source: darkModeEnabled && sourceDarkMode ? sourceDarkMode : source,
    style: imageStyle
  });
};

const HelpDetailBadge = _ref4 => {
  let {
    text
  } = _ref4;
  return createElement(View, {
    style: styles.helpDetailBadgeContainer
  }, createElement(Text, {
    style: styles.helpDetailBadgeText
  }, text));
};
//# sourceMappingURL=view-sections.native.js.map